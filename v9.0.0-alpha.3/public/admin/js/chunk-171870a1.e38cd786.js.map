{"version":3,"sources":["webpack:///./node_modules/codemirror/mode/soy/soy.js","webpack:///./node_modules/codemirror/mode/xml/xml.js","webpack:///./node_modules/codemirror/mode/htmlmixed/htmlmixed.js"],"names":["mod","CodeMirror","paramData","noEndTag","soyState","tags","variableScope","reduceIndent","indentingTags","Object","keys","filter","tag","defineMode","config","textMode","getMode","modes","html","name","multilineTagIndentFactor","multilineTagIndentPastTag","attributes","text","uri","trusted_resource_uri","css","js","statementIndent","indentUnit","last","array","length","tokenUntil","stream","state","untilRegExp","sol","indent","eat","oldString","string","match","exec","substr","pos","index","result","hideFirstChars","localState","localStates","mode","token","contains","list","element","next","prepend","popcontext","context","scope","variables","previousContext","ref","loose","Context","this","kind","expression","push","lookupVariables","quoteKind","test","startState","scopes","copyState","concat","map","pop","skipToEnd","paramRe","current","peekChar","peek","indexOf","endTag","tagName","substring","selfClosed","prevTag","indentingTag","tagError","textAfter","line","top","Pass","innerMode","electricInput","lineComment","blockCommentStart","blockCommentEnd","blockCommentContinue","useInnerComments","fold","registerHelper","defineMIME","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","type","setStyle","defaults","htmlMode","prop","inText","chain","parser","tokenize","ok","ch","inBlock","eatWhile","doctype","inTag","baseState","tagStart","inAttribute","stringStartCol","column","quote","closure","eol","isInAttribute","style","terminator","depth","startOfLine","prev","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","indentation","eatSpace","fullLine","alignCDATA","tagAfter","grabbers","configuration","helperType","skipAttribute","xmlCurrentTag","close","xmlCurrentContext","cx","reverse","mimeModes","defaultTags","script","maybeBackup","pat","cur","search","backUp","attrRegexpCache","getAttrRegexp","attr","regexp","RegExp","getAttrValue","getTagRegexp","anchored","addTags","from","to","dest","source","i","unshift","findMatchingMode","tagInfo","tagText","spec","parserConfig","configTags","configScript","scriptTypes","matches","htmlState","toLowerCase","modeSpec","endTagA","localMode","local"],"mappings":"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","file":"js/chunk-171870a1.e38cd786.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var paramData = { noEndTag: true, soyState: \"param-def\" };\n  var tags = {\n    \"alias\": { noEndTag: true },\n    \"delpackage\": { noEndTag: true },\n    \"namespace\": { noEndTag: true, soyState: \"namespace-def\" },\n    \"@param\": paramData,\n    \"@param?\": paramData,\n    \"@inject\": paramData,\n    \"@inject?\": paramData,\n    \"@state\": paramData,\n    \"template\": { soyState: \"templ-def\", variableScope: true},\n    \"literal\": { },\n    \"msg\": {},\n    \"fallbackmsg\": { noEndTag: true, reduceIndent: true},\n    \"select\": {},\n    \"plural\": {},\n    \"let\": { soyState: \"var-def\" },\n    \"if\": {},\n    \"elseif\": { noEndTag: true, reduceIndent: true},\n    \"else\": { noEndTag: true, reduceIndent: true},\n    \"switch\": {},\n    \"case\": { noEndTag: true, reduceIndent: true},\n    \"default\": { noEndTag: true, reduceIndent: true},\n    \"foreach\": { variableScope: true, soyState: \"var-def\" },\n    \"ifempty\": { noEndTag: true, reduceIndent: true},\n    \"for\": { variableScope: true, soyState: \"var-def\" },\n    \"call\": { soyState: \"templ-ref\" },\n    \"param\": { soyState: \"param-ref\"},\n    \"print\": { noEndTag: true },\n    \"deltemplate\": { soyState: \"templ-def\", variableScope: true},\n    \"delcall\": { soyState: \"templ-ref\" },\n    \"log\": {},\n    \"element\": { variableScope: true },\n  };\n\n  var indentingTags = Object.keys(tags).filter(function(tag) {\n    return !tags[tag].noEndTag || tags[tag].reduceIndent;\n  });\n\n  CodeMirror.defineMode(\"soy\", function(config) {\n    var textMode = CodeMirror.getMode(config, \"text/plain\");\n    var modes = {\n      html: CodeMirror.getMode(config, {name: \"text/html\", multilineTagIndentFactor: 2, multilineTagIndentPastTag: false}),\n      attributes: textMode,\n      text: textMode,\n      uri: textMode,\n      trusted_resource_uri: textMode,\n      css: CodeMirror.getMode(config, \"text/css\"),\n      js: CodeMirror.getMode(config, {name: \"text/javascript\", statementIndent: 2 * config.indentUnit})\n    };\n\n    function last(array) {\n      return array[array.length - 1];\n    }\n\n    function tokenUntil(stream, state, untilRegExp) {\n      if (stream.sol()) {\n        for (var indent = 0; indent < state.indent; indent++) {\n          if (!stream.eat(/\\s/)) break;\n        }\n        if (indent) return null;\n      }\n      var oldString = stream.string;\n      var match = untilRegExp.exec(oldString.substr(stream.pos));\n      if (match) {\n        // We don't use backUp because it backs up just the position, not the state.\n        // This uses an undocumented API.\n        stream.string = oldString.substr(0, stream.pos + match.index);\n      }\n      var result = stream.hideFirstChars(state.indent, function() {\n        var localState = last(state.localStates);\n        return localState.mode.token(stream, localState.state);\n      });\n      stream.string = oldString;\n      return result;\n    }\n\n    function contains(list, element) {\n      while (list) {\n        if (list.element === element) return true;\n        list = list.next;\n      }\n      return false;\n    }\n\n    function prepend(list, element) {\n      return {\n        element: element,\n        next: list\n      };\n    }\n\n    function popcontext(state) {\n      if (!state.context) return;\n      if (state.context.scope) {\n        state.variables = state.context.scope;\n      }\n      state.context = state.context.previousContext;\n    }\n\n    // Reference a variable `name` in `list`.\n    // Let `loose` be truthy to ignore missing identifiers.\n    function ref(list, name, loose) {\n      return contains(list, name) ? \"variable-2\" : (loose ? \"variable\" : \"variable-2 error\");\n    }\n\n    // Data for an open soy tag.\n    function Context(previousContext, tag, scope) {\n      this.previousContext = previousContext;\n      this.tag = tag;\n      this.kind = null;\n      this.scope = scope;\n    }\n\n    function expression(stream, state) {\n      var match;\n      if (stream.match(/[[]/)) {\n        state.soyState.push(\"list-literal\");\n        state.lookupVariables = false;\n        return null;\n      } else if (stream.match(/map\\b/)) {\n        state.soyState.push(\"map-literal\");\n        return \"keyword\";\n      } else if (stream.match(/record\\b/)) {\n        state.soyState.push(\"record-literal\");\n        return \"keyword\";\n      } else if (stream.match(/([\\w]+)(?=\\()/)) {\n        return \"variable callee\";\n      } else if (match = stream.match(/^[\"']/)) {\n        state.soyState.push(\"string\");\n        state.quoteKind = match[0];\n        return \"string\";\n      } else if (stream.match(/^[(]/)) {\n        state.soyState.push(\"open-parentheses\");\n        return null;\n      } else if (stream.match(/(null|true|false)(?!\\w)/) ||\n          stream.match(/0x([0-9a-fA-F]{2,})/) ||\n          stream.match(/-?([0-9]*[.])?[0-9]+(e[0-9]*)?/)) {\n        return \"atom\";\n      } else if (stream.match(/(\\||[+\\-*\\/%]|[=!]=|\\?:|[<>]=?)/)) {\n        // Tokenize filter, binary, null propagator, and equality operators.\n        return \"operator\";\n      } else if (match = stream.match(/^\\$([\\w]+)/)) {\n        return ref(state.variables, match[1], !state.lookupVariables);\n      } else if (match = stream.match(/^\\w+/)) {\n        return /^(?:as|and|or|not|in|if)$/.test(match[0]) ? \"keyword\" : null;\n      }\n\n      stream.next();\n      return null;\n    }\n\n    return {\n      startState: function() {\n        return {\n          soyState: [],\n          variables: prepend(null, 'ij'),\n          scopes: null,\n          indent: 0,\n          quoteKind: null,\n          context: null,\n          lookupVariables: true, // Is unknown variables considered an error\n          localStates: [{\n            mode: modes.html,\n            state: CodeMirror.startState(modes.html)\n          }]\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          tag: state.tag, // Last seen Soy tag.\n          soyState: state.soyState.concat([]),\n          variables: state.variables,\n          context: state.context,\n          indent: state.indent, // Indentation of the following line.\n          quoteKind: state.quoteKind,\n          lookupVariables: state.lookupVariables,\n          localStates: state.localStates.map(function(localState) {\n            return {\n              mode: localState.mode,\n              state: CodeMirror.copyState(localState.mode, localState.state)\n            };\n          })\n        };\n      },\n\n      token: function(stream, state) {\n        var match;\n\n        switch (last(state.soyState)) {\n          case \"comment\":\n            if (stream.match(/^.*?\\*\\//)) {\n              state.soyState.pop();\n            } else {\n              stream.skipToEnd();\n            }\n            if (!state.context || !state.context.scope) {\n              var paramRe = /@param\\??\\s+(\\S+)/g;\n              var current = stream.current();\n              for (var match; (match = paramRe.exec(current)); ) {\n                state.variables = prepend(state.variables, match[1]);\n              }\n            }\n            return \"comment\";\n\n          case \"string\":\n            var match = stream.match(/^.*?([\"']|\\\\[\\s\\S])/);\n            if (!match) {\n              stream.skipToEnd();\n            } else if (match[1] == state.quoteKind) {\n              state.quoteKind = null;\n              state.soyState.pop();\n            }\n            return \"string\";\n        }\n\n        if (!state.soyState.length || last(state.soyState) != \"literal\") {\n          if (stream.match(/^\\/\\*/)) {\n            state.soyState.push(\"comment\");\n            return \"comment\";\n          } else if (stream.match(stream.sol() ? /^\\s*\\/\\/.*/ : /^\\s+\\/\\/.*/)) {\n            return \"comment\";\n          }\n        }\n\n        switch (last(state.soyState)) {\n          case \"templ-def\":\n            if (match = stream.match(/^\\.?([\\w]+(?!\\.[\\w]+)*)/)) {\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"templ-ref\":\n            if (match = stream.match(/(\\.?[a-zA-Z_][a-zA-Z_0-9]+)+/)) {\n              state.soyState.pop();\n              // If the first character is '.', it can only be a local template.\n              if (match[0][0] == '.') {\n                return \"variable-2\"\n              }\n              // Otherwise\n              return \"variable\";\n            }\n            stream.next();\n            return null;\n\n          case \"namespace-def\":\n            if (match = stream.match(/^\\.?([\\w\\.]+)/)) {\n              state.soyState.pop();\n              return \"variable\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-def\":\n            if (match = stream.match(/^\\w+/)) {\n              state.variables = prepend(state.variables, match[0]);\n              state.soyState.pop();\n              state.soyState.push(\"param-type\");\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-ref\":\n            if (match = stream.match(/^\\w+/)) {\n              state.soyState.pop();\n              return \"property\";\n            }\n            stream.next();\n            return null;\n\n          case \"open-parentheses\":\n            if (stream.match(/[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            return expression(stream, state);\n\n          case \"param-type\":\n            var peekChar = stream.peek();\n            if (\"}]=>,\".indexOf(peekChar) != -1) {\n              state.soyState.pop();\n              return null;\n            } else if (peekChar == \"[\") {\n              state.soyState.push('param-type-record');\n              return null;\n            } else if (peekChar == \"<\") {\n              state.soyState.push('param-type-parameter');\n              return null;\n            } else if (match = stream.match(/^([\\w]+|[?])/)) {\n              return \"type\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-record\":\n            var peekChar = stream.peek();\n            if (peekChar == \"]\") {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/^\\w+/)) {\n              state.soyState.push('param-type');\n              return \"property\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-parameter\":\n            if (stream.match(/^[>]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/^[<,]/)) {\n              state.soyState.push('param-type');\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"var-def\":\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              state.variables = prepend(state.variables, match[1]);\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"record-literal\":\n            if (stream.match(/^[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/[(,]/)) {\n              state.soyState.push(\"map-value\")\n              state.soyState.push(\"record-key\")\n              return null;\n            }\n            stream.next()\n            return null;\n\n          case \"map-literal\":\n            if (stream.match(/^[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/[(,]/)) {\n              state.soyState.push(\"map-value\")\n              state.soyState.push(\"map-value\")\n              return null;\n            }\n            stream.next()\n            return null;\n\n          case \"list-literal\":\n            if (stream.match(/\\]/)) {\n              state.soyState.pop();\n              state.lookupVariables = true;\n              return null;\n            }\n            if (stream.match(/for\\b/)) {\n              state.soyState.push(\"var-def\")\n              return \"keyword\";\n            } else if (stream.match(/in\\b/)) {\n              state.lookupVariables = true;\n              return \"keyword\";\n            }\n            return expression(stream, state);\n\n          case \"record-key\":\n            if (stream.match(/[\\w]+/)) {\n              return \"property\";\n            }\n            if (stream.match(/^[:]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"map-value\":\n            if (stream.peek() == \")\" || stream.peek() == \",\" || stream.match(/^[:)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            return expression(stream, state);\n\n          case \"tag\":\n            var endTag = state.tag[0] == \"/\";\n            var tagName = endTag ? state.tag.substring(1) : state.tag;\n            var tag = tags[tagName];\n            if (stream.match(/^\\/?}/)) {\n              var selfClosed = stream.current() == \"/}\";\n              if (selfClosed && !endTag) {\n                popcontext(state);\n              }\n              if (state.tag == \"/template\" || state.tag == \"/deltemplate\") {\n                state.variables = prepend(null, 'ij');\n                state.indent = 0;\n              } else {\n                state.indent -= config.indentUnit *\n                    (selfClosed || indentingTags.indexOf(state.tag) == -1 ? 2 : 1);\n              }\n              state.soyState.pop();\n              return \"keyword\";\n            } else if (stream.match(/^([\\w?]+)(?==)/)) {\n              if (state.context && state.context.tag == tagName && stream.current() == \"kind\" && (match = stream.match(/^=\"([^\"]+)/, false))) {\n                var kind = match[1];\n                state.context.kind = kind;\n                var mode = modes[kind] || modes.html;\n                var localState = last(state.localStates);\n                if (localState.mode.indent) {\n                  state.indent += localState.mode.indent(localState.state, \"\", \"\");\n                }\n                state.localStates.push({\n                  mode: mode,\n                  state: CodeMirror.startState(mode)\n                });\n              }\n              return \"attribute\";\n            }\n            return expression(stream, state);\n\n          case \"literal\":\n            if (stream.match(/^(?=\\{\\/literal})/)) {\n              state.soyState.pop();\n              return this.token(stream, state);\n            }\n            return tokenUntil(stream, state, /\\{\\/literal}/);\n        }\n\n        if (stream.match(/^\\{literal}/)) {\n          state.indent += config.indentUnit;\n          state.soyState.push(\"literal\");\n          state.context = new Context(state.context, \"literal\", state.variables);\n          return \"keyword\";\n\n        // A tag-keyword must be followed by whitespace, comment or a closing tag.\n        } else if (match = stream.match(/^\\{([/@\\\\]?\\w+\\??)(?=$|[\\s}]|\\/[/*])/)) {\n          var prevTag = state.tag;\n          state.tag = match[1];\n          var endTag = state.tag[0] == \"/\";\n          var indentingTag = !!tags[state.tag];\n          var tagName = endTag ? state.tag.substring(1) : state.tag;\n          var tag = tags[tagName];\n          if (state.tag != \"/switch\")\n            state.indent += ((endTag || tag && tag.reduceIndent) && prevTag != \"switch\" ? 1 : 2) * config.indentUnit;\n\n          state.soyState.push(\"tag\");\n          var tagError = false;\n          if (tag) {\n            if (!endTag) {\n              if (tag.soyState) state.soyState.push(tag.soyState);\n            }\n            // If a new tag, open a new context.\n            if (!tag.noEndTag && (indentingTag || !endTag)) {\n              state.context = new Context(state.context, state.tag, tag.variableScope ? state.variables : null);\n            // Otherwise close the current context.\n            } else if (endTag) {\n              if (!state.context || state.context.tag != tagName) {\n                tagError = true;\n              } else if (state.context) {\n                if (state.context.kind) {\n                  state.localStates.pop();\n                  var localState = last(state.localStates);\n                  if (localState.mode.indent) {\n                    state.indent -= localState.mode.indent(localState.state, \"\", \"\");\n                  }\n                }\n                popcontext(state);\n              }\n            }\n          } else if (endTag) {\n            // Assume all tags with a closing tag are defined in the config.\n            tagError = true;\n          }\n          return (tagError ? \"error \" : \"\") + \"keyword\";\n\n        // Not a tag-keyword; it's an implicit print tag.\n        } else if (stream.eat('{')) {\n          state.tag = \"print\";\n          state.indent += 2 * config.indentUnit;\n          state.soyState.push(\"tag\");\n          return \"keyword\";\n        }\n\n        return tokenUntil(stream, state, /\\{|\\s+\\/\\/|\\/\\*/);\n      },\n\n      indent: function(state, textAfter, line) {\n        var indent = state.indent, top = last(state.soyState);\n        if (top == \"comment\") return CodeMirror.Pass;\n\n        if (top == \"literal\") {\n          if (/^\\{\\/literal}/.test(textAfter)) indent -= config.indentUnit;\n        } else {\n          if (/^\\s*\\{\\/(template|deltemplate)\\b/.test(textAfter)) return 0;\n          if (/^\\{(\\/|(fallbackmsg|elseif|else|ifempty)\\b)/.test(textAfter)) indent -= config.indentUnit;\n          if (state.tag != \"switch\" && /^\\{(case|default)\\b/.test(textAfter)) indent -= config.indentUnit;\n          if (/^\\{\\/switch\\b/.test(textAfter)) indent -= config.indentUnit;\n        }\n        var localState = last(state.localStates);\n        if (indent && localState.mode.indent) {\n          indent += localState.mode.indent(localState.state, textAfter, line);\n        }\n        return indent;\n      },\n\n      innerMode: function(state) {\n        if (state.soyState.length && last(state.soyState) != \"literal\") return null;\n        else return last(state.localStates);\n      },\n\n      electricInput: /^\\s*\\{(\\/|\\/template|\\/deltemplate|\\/switch|fallbackmsg|elseif|else|case|default|ifempty|\\/literal\\})$/,\n      lineComment: \"//\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      blockCommentContinue: \" * \",\n      useInnerComments: false,\n      fold: \"indent\"\n    };\n  }, \"htmlmixed\");\n\n  CodeMirror.registerHelper(\"wordChars\", \"soy\", /[\\w$]/);\n\n  CodeMirror.registerHelper(\"hintWords\", \"soy\", Object.keys(tags).concat(\n      [\"css\", \"debugger\"]));\n\n  CodeMirror.defineMIME(\"text/x-soy\", \"soy\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        if (cx.tagName) context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n"],"sourceRoot":""}