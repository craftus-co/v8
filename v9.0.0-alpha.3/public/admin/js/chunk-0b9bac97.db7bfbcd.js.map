{"version":3,"sources":["webpack:///./node_modules/codemirror/mode/haml/haml.js","webpack:///./node_modules/codemirror/mode/ruby/ruby.js","webpack:///./node_modules/codemirror/mode/xml/xml.js","webpack:///./node_modules/codemirror/mode/htmlmixed/htmlmixed.js"],"names":["mod","CodeMirror","defineMode","config","htmlMode","getMode","name","rubyMode","rubyInQuote","endQuote","stream","state","ch","peek","rubyState","tokenize","length","next","html","ruby","match","skipToEnd","token","previousToken","style","indented","startOfLine","htmlState","startState","copyState","sol","indentation","eatSpace","eol","backUp","defineMIME","wordObj","words","o","i","e","curPunc","keywords","indentWords","dedentWords","opening","closing","chain","newtok","push","tokenBase","readBlockComment","m","readQuoted","regexpAhead","embed","eat","delim","propertyIsEnumerable","readHereDoc","eatWhile","test","varList","lastTok","more","start","pos","depth","found","escaped","indexOf","tokenBaseUntilBrace","pop","tokenBaseOnce","alreadyCalled","quote","unescaped","context","type","prev","phrase","mayIndent","indentUnit","continuedLine","kwtype","thisTok","word","current","column","indent","textAfter","Pass","firstChar","charAt","ct","closed","electricInput","lineComment","fold","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","setStyle","defaults","prop","inText","parser","ok","inBlock","doctype","inTag","baseState","tagName","tagStart","inAttribute","stringStartCol","closure","isInAttribute","terminator","Context","this","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","fullLine","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","close","xmlCurrentContext","cx","reverse","mimeModes","defaultTags","script","maybeBackup","pat","cur","search","attrRegexpCache","getAttrRegexp","attr","regexp","RegExp","getAttrValue","text","getTagRegexp","anchored","addTags","from","to","tag","dest","source","unshift","findMatchingMode","tagInfo","tagText","spec","parserConfig","tags","configTags","configScript","scriptTypes","matches","mode","toLowerCase","modeSpec","endTagA","endTag","localState","localMode","local","line","innerMode"],"mappings":"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","file":"js/chunk-0b9bac97.db7bfbcd.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../ruby/ruby\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../ruby/ruby\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\n  // full haml mode. This handled embedded ruby and html fragments too\n  CodeMirror.defineMode(\"haml\", function(config) {\n    var htmlMode = CodeMirror.getMode(config, {name: \"htmlmixed\"});\n    var rubyMode = CodeMirror.getMode(config, \"ruby\");\n\n    function rubyInQuote(endQuote) {\n      return function(stream, state) {\n        var ch = stream.peek();\n        if (ch == endQuote && state.rubyState.tokenize.length == 1) {\n          // step out of ruby context as it seems to complete processing all the braces\n          stream.next();\n          state.tokenize = html;\n          return \"closeAttributeTag\";\n        } else {\n          return ruby(stream, state);\n        }\n      };\n    }\n\n    function ruby(stream, state) {\n      if (stream.match(\"-#\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      return rubyMode.token(stream, state.rubyState);\n    }\n\n    function html(stream, state) {\n      var ch = stream.peek();\n\n      // handle haml declarations. All declarations that cant be handled here\n      // will be passed to html mode\n      if (state.previousToken.style == \"comment\" ) {\n        if (state.indented > state.previousToken.indented) {\n          stream.skipToEnd();\n          return \"commentLine\";\n        }\n      }\n\n      if (state.startOfLine) {\n        if (ch == \"!\" && stream.match(\"!!\")) {\n          stream.skipToEnd();\n          return \"tag\";\n        } else if (stream.match(/^%[\\w:#\\.]+=/)) {\n          state.tokenize = ruby;\n          return \"hamlTag\";\n        } else if (stream.match(/^%[\\w:]+/)) {\n          return \"hamlTag\";\n        } else if (ch == \"/\" ) {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n      }\n\n      if (state.startOfLine || state.previousToken.style == \"hamlTag\") {\n        if ( ch == \"#\" || ch == \".\") {\n          stream.match(/[\\w-#\\.]*/);\n          return \"hamlAttribute\";\n        }\n      }\n\n      // donot handle --> as valid ruby, make it HTML close comment instead\n      if (state.startOfLine && !stream.match(\"-->\", false) && (ch == \"=\" || ch == \"-\" )) {\n        state.tokenize = ruby;\n        return state.tokenize(stream, state);\n      }\n\n      if (state.previousToken.style == \"hamlTag\" ||\n          state.previousToken.style == \"closeAttributeTag\" ||\n          state.previousToken.style == \"hamlAttribute\") {\n        if (ch == \"(\") {\n          state.tokenize = rubyInQuote(\")\");\n          return state.tokenize(stream, state);\n        } else if (ch == \"{\") {\n          if (!stream.match(/^\\{%.*/)) {\n            state.tokenize = rubyInQuote(\"}\");\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n\n      return htmlMode.token(stream, state.htmlState);\n    }\n\n    return {\n      // default to html mode\n      startState: function() {\n        var htmlState = CodeMirror.startState(htmlMode);\n        var rubyState = CodeMirror.startState(rubyMode);\n        return {\n          htmlState: htmlState,\n          rubyState: rubyState,\n          indented: 0,\n          previousToken: { style: null, indented: 0},\n          tokenize: html\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          htmlState : CodeMirror.copyState(htmlMode, state.htmlState),\n          rubyState: CodeMirror.copyState(rubyMode, state.rubyState),\n          indented: state.indented,\n          previousToken: state.previousToken,\n          tokenize: state.tokenize\n        };\n      },\n\n      token: function(stream, state) {\n        if (stream.sol()) {\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n        }\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        state.startOfLine = false;\n        // dont record comment line as we only want to measure comment line with\n        // the opening comment block\n        if (style && style != \"commentLine\") {\n          state.previousToken = { style: style, indented: state.indented };\n        }\n        // if current state is ruby and the previous token is not `,` reset the\n        // tokenize to html\n        if (stream.eol() && state.tokenize == ruby) {\n          stream.backUp(1);\n          var ch = stream.peek();\n          stream.next();\n          if (ch && ch != \",\") {\n            state.tokenize = html;\n          }\n        }\n        // reprocess some of the specific style tag when finish setting previousToken\n        if (style == \"hamlTag\") {\n          style = \"tag\";\n        } else if (style == \"commentLine\") {\n          style = \"comment\";\n        } else if (style == \"hamlAttribute\") {\n          style = \"attribute\";\n        } else if (style == \"closeAttributeTag\") {\n          style = null;\n        }\n        return style;\n      }\n    };\n  }, \"htmlmixed\", \"ruby\");\n\n  CodeMirror.defineMIME(\"text/x-haml\", \"haml\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"ruby\", function(config) {\n  function wordObj(words) {\n    var o = {};\n    for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n    return o;\n  }\n  var keywords = wordObj([\n    \"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\",\n    \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\",\n    \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\",\n    \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\",\n    \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\",\n    \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"\n  ]);\n  var indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\",\n                             \"catch\", \"loop\", \"proc\", \"begin\"]);\n  var dedentWords = wordObj([\"end\", \"until\"]);\n  var opening = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"};\n  var closing = {\"]\": \"[\", \"}\": \"{\", \")\": \"(\"};\n  var curPunc;\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n      state.tokenize.push(readBlockComment);\n      return \"comment\";\n    }\n    if (stream.eatSpace()) return null;\n    var ch = stream.next(), m;\n    if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n      return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n    } else if (ch == \"/\") {\n      if (regexpAhead(stream))\n        return chain(readQuoted(ch, \"string-2\", true), stream, state);\n      else\n        return \"operator\";\n    } else if (ch == \"%\") {\n      var style = \"string\", embed = true;\n      if (stream.eat(\"s\")) style = \"atom\";\n      else if (stream.eat(/[WQ]/)) style = \"string\";\n      else if (stream.eat(/[r]/)) style = \"string-2\";\n      else if (stream.eat(/[wxq]/)) { style = \"string\"; embed = false; }\n      var delim = stream.eat(/[^\\w\\s=]/);\n      if (!delim) return \"operator\";\n      if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n      return chain(readQuoted(delim, style, embed, true), stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n      return chain(readHereDoc(m[2], m[1]), stream, state);\n    } else if (ch == \"0\") {\n      if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);\n      else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);\n      else stream.eatWhile(/[0-7]/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n      return \"number\";\n    } else if (ch == \"?\") {\n      while (stream.match(/^\\\\[CM]-/)) {}\n      if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);\n      else stream.next();\n      return \"string\";\n    } else if (ch == \":\") {\n      if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n      if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state);\n\n      // :> :>> :< :<< are valid symbols\n      if (stream.eat(/[\\<\\>]/)) {\n        stream.eat(/[\\<\\>]/);\n        return \"atom\";\n      }\n\n      // :+ :- :/ :* :| :& :! are valid symbols\n      if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n        return \"atom\";\n      }\n\n      // Symbols can't start by a digit\n      if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n        stream.eatWhile(/[\\w$\\xa1-\\uffff]/);\n        // Only one ? ! = is allowed and only as the last character\n        stream.eat(/[\\?\\!\\=]/);\n        return \"atom\";\n      }\n      return \"operator\";\n    } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n      stream.eat(\"@\");\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      return \"variable-2\";\n    } else if (ch == \"$\") {\n      if (stream.eat(/[a-zA-Z_]/)) {\n        stream.eatWhile(/[\\w]/);\n      } else if (stream.eat(/\\d/)) {\n        stream.eat(/\\d/);\n      } else {\n        stream.next(); // Must be a special global like $: or $!\n      }\n      return \"variable-3\";\n    } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      stream.eat(/[\\?\\!]/);\n      if (stream.eat(\":\")) return \"atom\";\n      return \"ident\";\n    } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n      curPunc = \"|\";\n      return null;\n    } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    } else if (ch == \"-\" && stream.eat(\">\")) {\n      return \"arrow\";\n    } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n      var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n      if (ch == \".\" && !more) curPunc = \".\";\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function regexpAhead(stream) {\n    var start = stream.pos, depth = 0, next, found = false, escaped = false\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (\"[{(\".indexOf(next) > -1) {\n          depth++\n        } else if (\"]})\".indexOf(next) > -1) {\n          depth--\n          if (depth < 0) break\n        } else if (next == \"/\" && depth == 0) {\n          found = true\n          break\n        }\n        escaped = next == \"\\\\\"\n      } else {\n        escaped = false\n      }\n    }\n    stream.backUp(stream.pos - start)\n    return found\n  }\n\n  function tokenBaseUntilBrace(depth) {\n    if (!depth) depth = 1;\n    return function(stream, state) {\n      if (stream.peek() == \"}\") {\n        if (depth == 1) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length-1](stream, state);\n        } else {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n        }\n      } else if (stream.peek() == \"{\") {\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n      }\n      return tokenBase(stream, state);\n    };\n  }\n  function tokenBaseOnce() {\n    var alreadyCalled = false;\n    return function(stream, state) {\n      if (alreadyCalled) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length-1](stream, state);\n      }\n      alreadyCalled = true;\n      return tokenBase(stream, state);\n    };\n  }\n  function readQuoted(quote, style, embed, unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n\n      if (state.context.type === 'read-quoted-paused') {\n        state.context = state.context.prev;\n        stream.eat(\"}\");\n      }\n\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        if (embed && ch == \"#\" && !escaped) {\n          if (stream.eat(\"{\")) {\n            if (quote == \"}\") {\n              state.context = {prev: state.context, type: 'read-quoted-paused'};\n            }\n            state.tokenize.push(tokenBaseUntilBrace());\n            break;\n          } else if (/[@\\$]/.test(stream.peek())) {\n            state.tokenize.push(tokenBaseOnce());\n            break;\n          }\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return style;\n    };\n  }\n  function readHereDoc(phrase, mayIndent) {\n    return function(stream, state) {\n      if (mayIndent) stream.eatSpace()\n      if (stream.match(phrase)) state.tokenize.pop();\n      else stream.skipToEnd();\n      return \"string\";\n    };\n  }\n  function readBlockComment(stream, state) {\n    if (stream.sol() && stream.match(\"=end\") && stream.eol())\n      state.tokenize.pop();\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase],\n              indented: 0,\n              context: {type: \"top\", indented: -config.indentUnit},\n              continuedLine: false,\n              lastTok: null,\n              varList: false};\n    },\n\n    token: function(stream, state) {\n      curPunc = null;\n      if (stream.sol()) state.indented = stream.indentation();\n      var style = state.tokenize[state.tokenize.length-1](stream, state), kwtype;\n      var thisTok = curPunc;\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = state.lastTok == \".\" ? \"property\"\n          : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : /^[A-Z]/.test(word) ? \"tag\"\n          : (state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList) ? \"def\"\n          : \"variable\";\n        if (style == \"keyword\") {\n          thisTok = word;\n          if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";\n          else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";\n          else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation())\n            kwtype = \"indent\";\n          else if (word == \"do\" && state.context.indented < state.indented)\n            kwtype = \"indent\";\n        }\n      }\n      if (curPunc || (style && style != \"comment\")) state.lastTok = thisTok;\n      if (curPunc == \"|\") state.varList = !state.varList;\n\n      if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc))\n        state.context = {prev: state.context, type: curPunc || style, indented: state.indented};\n      else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev)\n        state.context = state.context.prev;\n\n      if (stream.eol())\n        state.continuedLine = (curPunc == \"\\\\\" || style == \"operator\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize[state.tokenize.length-1] != tokenBase) return CodeMirror.Pass;\n      var firstChar = textAfter && textAfter.charAt(0);\n      var ct = state.context;\n      var closed = ct.type == closing[firstChar] ||\n        ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n      return ct.indented + (closed ? 0 : config.indentUnit) +\n        (state.continuedLine ? config.indentUnit : 0);\n    },\n\n    electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        if (cx.tagName) context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n"],"sourceRoot":""}