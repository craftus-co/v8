{"version":3,"sources":["webpack:///./node_modules/codemirror/mode/wast/wast.js","webpack:///./node_modules/codemirror/addon/mode/simple.js"],"names":["mod","CodeMirror","defineSimpleMode","start","regex","token","next","indent","dedent","comment","meta","dontIndentStates","defineMIME","ensureState","states","name","hasOwnProperty","Error","toRegex","val","caret","flags","RegExp","ignoreCase","source","String","asToken","apply","replace","result","i","length","push","Rule","data","this","tokenFunction","config","stream","state","pending","pend","shift","pos","text","local","end","match","tok","endToken","localState","m","mode","endScan","exec","current","index","curState","rule","matches","sol","stack","pop","enterLocalMode","indentation","indentUnit","j","backUp","join","cmp","a","b","props","prop","spec","pers","persistent","p","persistentStates","getMode","lState","startState","forceEnd","indexOf","arr","indentFunction","textAfter","line","Pass","rules","scan","dedentIfLineStart","slice","defineMode","simpleMode","states_","hasIndentation","list","orig","copyState","s","innerMode"],"mappings":"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","file":"js/chunk-710d49f2.b412feb0.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineSimpleMode('wast', {\n  start: [\n    {regex: /[+\\-]?(?:nan(?::0x[0-9a-fA-F]+)?|infinity|inf|0x[0-9a-fA-F]+\\.?[0-9a-fA-F]*p[+\\/-]?\\d+|\\d+(?:\\.\\d*)?[eE][+\\-]?\\d*|\\d+\\.\\d*|0x[0-9a-fA-F]+|\\d+)/, token: \"number\"},\n    {regex: /anyfunc|mut|nop|block|if|then|else|loop|br|br_if|br_table|call|call_indirect|drop|end|return|local\\.get|local\\.set|tee_local|global\\.get|global\\.set|i32\\.load|i64\\.load|f32\\.load|f64\\.load|i32\\.store|i64\\.store|f32\\.store|f64\\.store|i32\\.load8_s|i64\\.load8_s|i32\\.load8_u|i64\\.load8_u|i32\\.load16_s|i64\\.load16_s|i32\\.load16_u|i64\\.load16_u|i64\\.load32_s|i64\\.load32_u|i32\\.store8|i64\\.store8|i32\\.store16|i64\\.store16|i32\\.const|i64\\.const|f32\\.const|f64\\.const|i32\\.eqz|i64\\.eqz|i32\\.clz|i64\\.clz|i32\\.ctz|i64\\.ctz|i32\\.popcnt|i64\\.popcnt|f32\\.neg|f64\\.neg|f32\\.abs|f64\\.abs|f32\\.sqrt|f64\\.sqrt|f32\\.ceil|f64\\.ceil|f32\\.floor|f64\\.floor|f32\\.trunc|f64\\.trunc|f32\\.nearest|f64\\.nearest|i32\\.add|i64\\.add|i32\\.sub|i64\\.sub|i32\\.mul|i64\\.mul|i32\\.div_s|i64\\.div_s|i32\\.div_u|i64\\.div_u|i32\\.rem_s|i64\\.rem_s|i32\\.rem_u|i64\\.rem_u|i32\\.and|i64\\.and|i32\\.or|i64\\.or|i32\\.xor|i64\\.xor|i32\\.shl|i64\\.shl|i32\\.shr_s|i64\\.shr_s|i32\\.shr_u|i64\\.shr_u|i32\\.rotl|i64\\.rotl|i32\\.rotr|i64\\.rotr|f32\\.add|f64\\.add|f32\\.sub|f64\\.sub|f32\\.mul|f64\\.mul|f32\\.div|f64\\.div|f32\\.min|f64\\.min|f32\\.max|f64\\.max|f32\\.copysign|f64\\.copysign|i32\\.eq|i64\\.eq|i32\\.ne|i64\\.ne|i32\\.lt_s|i64\\.lt_s|i32\\.lt_u|i64\\.lt_u|i32\\.le_s|i64\\.le_s|i32\\.le_u|i64\\.le_u|i32\\.gt_s|i64\\.gt_s|i32\\.gt_u|i64\\.gt_u|i32\\.ge_s|i64\\.ge_s|i32\\.ge_u|i64\\.ge_u|f32\\.eq|f64\\.eq|f32\\.ne|f64\\.ne|f32\\.lt|f64\\.lt|f32\\.le|f64\\.le|f32\\.gt|f64\\.gt|f32\\.ge|f64\\.ge|i64\\.extend_s\\/i32|i64\\.extend_u\\/i32|i32\\.wrap\\/i64|i32\\.trunc_s\\/f32|i64\\.trunc_s\\/f32|i32\\.trunc_s\\/f64|i64\\.trunc_s\\/f64|i32\\.trunc_u\\/f32|i64\\.trunc_u\\/f32|i32\\.trunc_u\\/f64|i64\\.trunc_u\\/f64|f32\\.convert_s\\/i32|f64\\.convert_s\\/i32|f32\\.convert_s\\/i64|f64\\.convert_s\\/i64|f32\\.convert_u\\/i32|f64\\.convert_u\\/i32|f32\\.convert_u\\/i64|f64\\.convert_u\\/i64|f64\\.promote\\/f32|f32\\.demote\\/f64|f32\\.reinterpret\\/i32|i32\\.reinterpret\\/f32|f64\\.reinterpret\\/i64|i64\\.reinterpret\\/f64|select|unreachable|current_memory|memory.size|grow_memory|memory.grow|type|func|param|result|local|global|module|table|memory|start|elem|data|offset|import|export/, token: \"keyword\"},\n    {regex: /\\b(i32|i64|f32|f64)\\b/, token: \"atom\"},\n    {regex: /\\$([a-zA-Z0-9_`\\+\\-\\*\\/\\\\\\^~=<>!\\?@#$%&|:\\.]+)/, token: \"variable-2\"},\n    {regex: /\"(?:[^\"\\\\\\x00-\\x1f\\x7f]|\\\\[nt\\\\'\"]|\\\\[0-9a-fA-F][0-9a-fA-F])*\"/, token: \"string\"},\n    {regex: /\\(;.*?/, token: \"comment\", next: \"comment\"},\n    {regex: /;;.*$/, token: \"comment\"},\n    {regex: /\\(/, indent: true},\n    {regex: /\\)/, dedent: true},\n  ],\n\n  comment: [\n    {regex: /.*?;\\)/, token: \"comment\", next: \"start\"},\n    {regex: /.*/, token: \"comment\"},\n  ],\n\n  meta: {\n    dontIndentStates: ['comment'],\n  },\n});\n\n// https://github.com/WebAssembly/design/issues/981 mentions text/webassembly,\n// which seems like a reasonable choice, although it's not standard right now.\nCodeMirror.defineMIME(\"text/webassembly\", \"wast\");\n\n});","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function(name, states) {\n    CodeMirror.defineMode(name, function(config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function(config, states) {\n    ensureState(states, \"start\");\n    var states_ = {}, meta = states.meta || {}, hasIndentation = false;\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [], orig = states[state];\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n    var mode = {\n      startState: function() {\n        return {state: \"start\", pending: null,\n                local: null, localState: null,\n                indent: hasIndentation ? [] : null};\n      },\n      copyState: function(state) {\n        var s = {state: state.state, pending: state.pending,\n                 local: state.local, localState: null,\n                 indent: state.indent && state.indent.slice(0)};\n        if (state.localState)\n          s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack)\n          s.stack = state.stack.slice(0);\n        for (var pers = state.persistentStates; pers; pers = pers.next)\n          s.persistentStates = {mode: pers.mode,\n                                spec: pers.spec,\n                                state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n                                next: s.persistentStates};\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function(state) { return state.local && {mode: state.local.mode, state: state.localState}; },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop))\n      mode[prop] = meta[prop];\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name))\n      throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n    for (var i = 0; i < val.length; i++)\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function(stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState), m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current())))\n            stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode)\n            enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent)\n            state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent)\n            state.indent.pop();\n          var token = rule.token\n          if (token && token.apply) token = token(matches)\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            state.pending = [];\n            for (var j = 2; j < matches.length; j++)\n              if (matches[j])\n                state.pending.push({text: matches[j], token: rule.token[j - 1]});\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next)\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers)\n      state.persistentStates = {mode: mode, spec: spec.spec, state: lState, next: state.persistentStates};\n\n    state.localState = lState;\n    state.local = {mode: mode,\n                   end: spec.end && toRegex(spec.end),\n                   endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n                   endToken: token && token.join ? token[token.length - 1] : token};\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n\n  function indentFunction(states, meta) {\n    return function(state, textAfter, line) {\n      if (state.local && state.local.mode.indent)\n        return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1)\n        return CodeMirror.Pass;\n\n      var pos = state.indent.length - 1, rules = states[state.state];\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n        break;\n      }\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});\n"],"sourceRoot":""}