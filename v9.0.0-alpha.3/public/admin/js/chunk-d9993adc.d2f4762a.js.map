{"version":3,"sources":["webpack:///./node_modules/codemirror/mode/django/django.js","webpack:///./node_modules/codemirror/addon/mode/overlay.js","webpack:///./node_modules/codemirror/mode/xml/xml.js","webpack:///./node_modules/codemirror/mode/htmlmixed/htmlmixed.js"],"names":["mod","CodeMirror","defineMode","keywords","filters","operators","wordOperators","tokenBase","stream","state","match","tokenize","inVariable","inTag","inComment","next","inString","delimiter","previousTokenizer","escapeNext","eat","ch","waitDot","peek","waitProperty","Error","waitPipe","waitFilter","eatSpace","foundVariable","keywordMatch","blockCommentTag","inBlockComment","skipToEnd","RegExp","join","startState","token","blockCommentStart","blockCommentEnd","config","htmlBase","getMode","djangoInner","overlayMode","defineMIME","base","overlay","combine","basePos","baseCur","overlayPos","overlayCur","streamSeen","copyState","Math","min","start","pos","combineTokens","indent","textAfter","line","electricChars","innerMode","mode","blankLine","baseToken","overlayToken","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","type","setStyle","indentUnit","defaults","htmlMode","prop","inText","chain","parser","ok","inBlock","eatWhile","doctype","baseState","tagName","tagStart","test","inAttribute","stringStartCol","column","quote","closure","eol","isInAttribute","style","terminator","depth","Context","startOfLine","this","prev","context","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","sol","indentation","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","configuration","helperType","skipAttribute","xmlCurrentTag","name","close","xmlCurrentContext","cx","push","reverse","mimeModes","defaultTags","script","maybeBackup","pat","cur","search","backUp","attrRegexpCache","getAttrRegexp","attr","regexp","getAttrValue","text","getTagRegexp","anchored","addTags","from","to","tag","dest","source","i","unshift","findMatchingMode","tagInfo","tagText","spec","parserConfig","tags","configTags","configScript","scriptTypes","matches","html","htmlState","toLowerCase","modeSpec","endTagA","endTag","localState","localMode","local"],"mappings":"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","file":"js/chunk-d9993adc.d2f4762a.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"),\n        require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\",\n            \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"django:inner\", function() {\n    var keywords = [\"block\", \"endblock\", \"for\", \"endfor\", \"true\", \"false\", \"filter\", \"endfilter\",\n                    \"loop\", \"none\", \"self\", \"super\", \"if\", \"elif\", \"endif\", \"as\", \"else\", \"import\",\n                    \"with\", \"endwith\", \"without\", \"context\", \"ifequal\", \"endifequal\", \"ifnotequal\",\n                    \"endifnotequal\", \"extends\", \"include\", \"load\", \"comment\", \"endcomment\",\n                    \"empty\", \"url\", \"static\", \"trans\", \"blocktrans\", \"endblocktrans\", \"now\",\n                    \"regroup\", \"lorem\", \"ifchanged\", \"endifchanged\", \"firstof\", \"debug\", \"cycle\",\n                    \"csrf_token\", \"autoescape\", \"endautoescape\", \"spaceless\", \"endspaceless\",\n                    \"ssi\", \"templatetag\", \"verbatim\", \"endverbatim\", \"widthratio\"],\n        filters = [\"add\", \"addslashes\", \"capfirst\", \"center\", \"cut\", \"date\",\n                   \"default\", \"default_if_none\", \"dictsort\",\n                   \"dictsortreversed\", \"divisibleby\", \"escape\", \"escapejs\",\n                   \"filesizeformat\", \"first\", \"floatformat\", \"force_escape\",\n                   \"get_digit\", \"iriencode\", \"join\", \"last\", \"length\",\n                   \"length_is\", \"linebreaks\", \"linebreaksbr\", \"linenumbers\",\n                   \"ljust\", \"lower\", \"make_list\", \"phone2numeric\", \"pluralize\",\n                   \"pprint\", \"random\", \"removetags\", \"rjust\", \"safe\",\n                   \"safeseq\", \"slice\", \"slugify\", \"stringformat\", \"striptags\",\n                   \"time\", \"timesince\", \"timeuntil\", \"title\", \"truncatechars\",\n                   \"truncatechars_html\", \"truncatewords\", \"truncatewords_html\",\n                   \"unordered_list\", \"upper\", \"urlencode\", \"urlize\",\n                   \"urlizetrunc\", \"wordcount\", \"wordwrap\", \"yesno\"],\n        operators = [\"==\", \"!=\", \"<\", \">\", \"<=\", \">=\"],\n        wordOperators = [\"in\", \"not\", \"or\", \"and\"];\n\n    keywords = new RegExp(\"^\\\\b(\" + keywords.join(\"|\") + \")\\\\b\");\n    filters = new RegExp(\"^\\\\b(\" + filters.join(\"|\") + \")\\\\b\");\n    operators = new RegExp(\"^\\\\b(\" + operators.join(\"|\") + \")\\\\b\");\n    wordOperators = new RegExp(\"^\\\\b(\" + wordOperators.join(\"|\") + \")\\\\b\");\n\n    // We have to return \"null\" instead of null, in order to avoid string\n    // styling as the default, when using Django templates inside HTML\n    // element attributes\n    function tokenBase (stream, state) {\n      // Attempt to identify a variable, template or comment tag respectively\n      if (stream.match(\"{{\")) {\n        state.tokenize = inVariable;\n        return \"tag\";\n      } else if (stream.match(\"{%\")) {\n        state.tokenize = inTag;\n        return \"tag\";\n      } else if (stream.match(\"{#\")) {\n        state.tokenize = inComment;\n        return \"comment\";\n      }\n\n      // Ignore completely any stream series that do not match the\n      // Django template opening tags.\n      while (stream.next() != null && !stream.match(/\\{[{%#]/, false)) {}\n      return null;\n    }\n\n    // A string can be included in either single or double quotes (this is\n    // the delimiter). Mark everything as a string until the start delimiter\n    // occurs again.\n    function inString (delimiter, previousTokenizer) {\n      return function (stream, state) {\n        if (!state.escapeNext && stream.eat(delimiter)) {\n          state.tokenize = previousTokenizer;\n        } else {\n          if (state.escapeNext) {\n            state.escapeNext = false;\n          }\n\n          var ch = stream.next();\n\n          // Take into account the backslash for escaping characters, such as\n          // the string delimiter.\n          if (ch == \"\\\\\") {\n            state.escapeNext = true;\n          }\n        }\n\n        return \"string\";\n      };\n    }\n\n    // Apply Django template variable syntax highlighting\n    function inVariable (stream, state) {\n      // Attempt to match a dot that precedes a property\n      if (state.waitDot) {\n        state.waitDot = false;\n\n        if (stream.peek() != \".\") {\n          return \"null\";\n        }\n\n        // Dot followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\".\")) {\n          state.waitProperty = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for property.\");\n        }\n      }\n\n      // Attempt to match a pipe that precedes a filter\n      if (state.waitPipe) {\n        state.waitPipe = false;\n\n        if (stream.peek() != \"|\") {\n          return \"null\";\n        }\n\n        // Pipe followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\"|\")) {\n          state.waitFilter = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for filter.\");\n        }\n      }\n\n      // Highlight properties\n      if (state.waitProperty) {\n        state.waitProperty = false;\n        if (stream.match(/\\b(\\w+)\\b/)) {\n          state.waitDot = true;  // A property can be followed by another property\n          state.waitPipe = true;  // A property can be followed by a filter\n          return \"property\";\n        }\n      }\n\n      // Highlight filters\n      if (state.waitFilter) {\n          state.waitFilter = false;\n        if (stream.match(filters)) {\n          return \"variable-2\";\n        }\n      }\n\n      // Ignore all white spaces\n      if (stream.eatSpace()) {\n        state.waitProperty = false;\n        return \"null\";\n      }\n\n      // Identify numbers\n      if (stream.match(/\\b\\d+(\\.\\d+)?\\b/)) {\n        return \"number\";\n      }\n\n      // Identify strings\n      if (stream.match(\"'\")) {\n        state.tokenize = inString(\"'\", state.tokenize);\n        return \"string\";\n      } else if (stream.match('\"')) {\n        state.tokenize = inString('\"', state.tokenize);\n        return \"string\";\n      }\n\n      // Attempt to find the variable\n      if (stream.match(/\\b(\\w+)\\b/) && !state.foundVariable) {\n        state.waitDot = true;\n        state.waitPipe = true;  // A property can be followed by a filter\n        return \"variable\";\n      }\n\n      // If found closing tag reset\n      if (stream.match(\"}}\")) {\n        state.waitProperty = null;\n        state.waitFilter = null;\n        state.waitDot = null;\n        state.waitPipe = null;\n        state.tokenize = tokenBase;\n        return \"tag\";\n      }\n\n      // If nothing was found, advance to the next character\n      stream.next();\n      return \"null\";\n    }\n\n    function inTag (stream, state) {\n      // Attempt to match a dot that precedes a property\n      if (state.waitDot) {\n        state.waitDot = false;\n\n        if (stream.peek() != \".\") {\n          return \"null\";\n        }\n\n        // Dot followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\".\")) {\n          state.waitProperty = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for property.\");\n        }\n      }\n\n      // Attempt to match a pipe that precedes a filter\n      if (state.waitPipe) {\n        state.waitPipe = false;\n\n        if (stream.peek() != \"|\") {\n          return \"null\";\n        }\n\n        // Pipe followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\"|\")) {\n          state.waitFilter = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for filter.\");\n        }\n      }\n\n      // Highlight properties\n      if (state.waitProperty) {\n        state.waitProperty = false;\n        if (stream.match(/\\b(\\w+)\\b/)) {\n          state.waitDot = true;  // A property can be followed by another property\n          state.waitPipe = true;  // A property can be followed by a filter\n          return \"property\";\n        }\n      }\n\n      // Highlight filters\n      if (state.waitFilter) {\n          state.waitFilter = false;\n        if (stream.match(filters)) {\n          return \"variable-2\";\n        }\n      }\n\n      // Ignore all white spaces\n      if (stream.eatSpace()) {\n        state.waitProperty = false;\n        return \"null\";\n      }\n\n      // Identify numbers\n      if (stream.match(/\\b\\d+(\\.\\d+)?\\b/)) {\n        return \"number\";\n      }\n\n      // Identify strings\n      if (stream.match(\"'\")) {\n        state.tokenize = inString(\"'\", state.tokenize);\n        return \"string\";\n      } else if (stream.match('\"')) {\n        state.tokenize = inString('\"', state.tokenize);\n        return \"string\";\n      }\n\n      // Attempt to match an operator\n      if (stream.match(operators)) {\n        return \"operator\";\n      }\n\n      // Attempt to match a word operator\n      if (stream.match(wordOperators)) {\n        return \"keyword\";\n      }\n\n      // Attempt to match a keyword\n      var keywordMatch = stream.match(keywords);\n      if (keywordMatch) {\n        if (keywordMatch[0] == \"comment\") {\n          state.blockCommentTag = true;\n        }\n        return \"keyword\";\n      }\n\n      // Attempt to match a variable\n      if (stream.match(/\\b(\\w+)\\b/)) {\n        state.waitDot = true;\n        state.waitPipe = true;  // A property can be followed by a filter\n        return \"variable\";\n      }\n\n      // If found closing tag reset\n      if (stream.match(\"%}\")) {\n        state.waitProperty = null;\n        state.waitFilter = null;\n        state.waitDot = null;\n        state.waitPipe = null;\n        // If the tag that closes is a block comment tag, we want to mark the\n        // following code as comment, until the tag closes.\n        if (state.blockCommentTag) {\n          state.blockCommentTag = false;  // Release the \"lock\"\n          state.tokenize = inBlockComment;\n        } else {\n          state.tokenize = tokenBase;\n        }\n        return \"tag\";\n      }\n\n      // If nothing was found, advance to the next character\n      stream.next();\n      return \"null\";\n    }\n\n    // Mark everything as comment inside the tag and the tag itself.\n    function inComment (stream, state) {\n      if (stream.match(/^.*?#\\}/)) state.tokenize = tokenBase\n      else stream.skipToEnd()\n      return \"comment\";\n    }\n\n    // Mark everything as a comment until the `blockcomment` tag closes.\n    function inBlockComment (stream, state) {\n      if (stream.match(/\\{%\\s*endcomment\\s*%\\}/, false)) {\n        state.tokenize = inTag;\n        stream.match(\"{%\");\n        return \"tag\";\n      } else {\n        stream.next();\n        return \"comment\";\n      }\n    }\n\n    return {\n      startState: function () {\n        return {tokenize: tokenBase};\n      },\n      token: function (stream, state) {\n        return state.tokenize(stream, state);\n      },\n      blockCommentStart: \"{% comment %}\",\n      blockCommentEnd: \"{% endcomment %}\"\n    };\n  });\n\n  CodeMirror.defineMode(\"django\", function(config) {\n    var htmlBase = CodeMirror.getMode(config, \"text/html\");\n    var djangoInner = CodeMirror.getMode(config, \"django:inner\");\n    return CodeMirror.overlayMode(htmlBase, djangoInner);\n  });\n\n  CodeMirror.defineMIME(\"text/x-django\", \"django\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.overlayMode = function(base, overlay, combine) {\n  return {\n    startState: function() {\n      return {\n        base: CodeMirror.startState(base),\n        overlay: CodeMirror.startState(overlay),\n        basePos: 0, baseCur: null,\n        overlayPos: 0, overlayCur: null,\n        streamSeen: null\n      };\n    },\n    copyState: function(state) {\n      return {\n        base: CodeMirror.copyState(base, state.base),\n        overlay: CodeMirror.copyState(overlay, state.overlay),\n        basePos: state.basePos, baseCur: null,\n        overlayPos: state.overlayPos, overlayCur: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream != state.streamSeen ||\n          Math.min(state.basePos, state.overlayPos) < stream.start) {\n        state.streamSeen = stream;\n        state.basePos = state.overlayPos = stream.start;\n      }\n\n      if (stream.start == state.basePos) {\n        state.baseCur = base.token(stream, state.base);\n        state.basePos = stream.pos;\n      }\n      if (stream.start == state.overlayPos) {\n        stream.pos = stream.start;\n        state.overlayCur = overlay.token(stream, state.overlay);\n        state.overlayPos = stream.pos;\n      }\n      stream.pos = Math.min(state.basePos, state.overlayPos);\n\n      // state.overlay.combineTokens always takes precedence over combine,\n      // unless set to null\n      if (state.overlayCur == null) return state.baseCur;\n      else if (state.baseCur != null &&\n               state.overlay.combineTokens ||\n               combine && state.overlay.combineTokens == null)\n        return state.baseCur + \" \" + state.overlayCur;\n      else return state.overlayCur;\n    },\n\n    indent: base.indent && function(state, textAfter, line) {\n      return base.indent(state.base, textAfter, line);\n    },\n    electricChars: base.electricChars,\n\n    innerMode: function(state) { return {state: state.base, mode: base}; },\n\n    blankLine: function(state) {\n      var baseToken, overlayToken;\n      if (base.blankLine) baseToken = base.blankLine(state.base);\n      if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n\n      return overlayToken == null ?\n        baseToken :\n        (combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken);\n    }\n  };\n};\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        if (cx.tagName) context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n"],"sourceRoot":""}