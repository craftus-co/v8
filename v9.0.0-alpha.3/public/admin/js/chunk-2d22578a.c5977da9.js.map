{"version":3,"sources":["webpack:///./node_modules/codemirror/mode/livescript/livescript.js"],"names":["mod","CodeMirror","defineMode","tokenBase","stream","state","next_rule","next","nr","Rules","splice","i$","length","r","regex","match","token","external","startState","lastToken","style","indent","content","pos","start","indentation","current","replace","indenter","identifier","RegExp","keywordend","stringfill","heregex","key","comment","qdoc","qqdoc","qstring","qqstring","js","words","idx","i","len","rr","defineMIME"],"mappings":"oGAQA,SAAUA,GAENA,EAAI,EAAQ,UAFhB,EAOG,SAASC,GACV,aAEAA,EAAWC,WAAW,cAAc,WAClC,IAAIC,EAAY,SAASC,EAAQC,GAC/B,IAAIC,EAAYD,EAAME,MAAQ,QAC9B,GAAID,EAAW,CACbD,EAAME,KAAOF,EAAME,KACnB,IAAIC,EAAKC,EAAMH,GACf,GAAIE,EAAGE,OAAQ,CACb,IAAK,IAAIC,EAAK,EAAGA,EAAKH,EAAGI,SAAUD,EAAI,CACrC,IAAIE,EAAIL,EAAGG,GACX,GAAIE,EAAEC,OAASV,EAAOW,MAAMF,EAAEC,OAE5B,OADAT,EAAME,KAAOM,EAAEN,MAAQF,EAAME,KACtBM,EAAEG,MAIb,OADAZ,EAAOG,OACA,QAET,GAAIH,EAAOW,MAAMF,EAAIJ,EAAMH,IACzB,OAAIO,EAAEC,OAASV,EAAOW,MAAMF,EAAEC,QAC5BT,EAAME,KAAOM,EAAEN,KACRM,EAAEG,QAETZ,EAAOG,OACA,SAKb,OADAH,EAAOG,OACA,SAELU,EAAW,CACbC,WAAY,WACV,MAAO,CACLX,KAAM,QACNY,UAAW,CAACC,MAAO,KAAMC,OAAQ,EAAGC,QAAS,MAGjDN,MAAO,SAASZ,EAAQC,GACtB,MAAOD,EAAOmB,KAAOnB,EAAOoB,MAC1B,IAAIJ,EAAQjB,EAAUC,EAAQC,GAMhC,OALAA,EAAMc,UAAY,CAChBC,MAAOA,EACPC,OAAQjB,EAAOqB,cACfH,QAASlB,EAAOsB,WAEXN,EAAMO,QAAQ,MAAO,MAE9BN,OAAQ,SAAShB,GACf,IAAIoB,EAAcpB,EAAMc,UAAUE,OAIlC,OAHIhB,EAAMc,UAAUG,QAAQP,MAAMa,KAChCH,GAAe,GAEVA,IAGX,OAAOR,KAGT,IAAIY,EAAa,2EACbD,EAAWE,OAAO,4HAA8HD,EAAa,aAC7JE,EAAa,qCACbC,EAAa,CACfhB,MAAO,SACPF,MAAO,MAELL,EAAQ,CACVe,MAAO,CACL,CACER,MAAO,cACPF,MAAO,OACPP,KAAM,WACL,CACDS,MAAO,UACPF,MAAO,OACN,CACDE,MAAO,UACPF,MAAO,wUAA0UiB,GAChV,CACDf,MAAO,oBACPF,MAAO,mDAAqDiB,GAC3D,CACDf,MAAO,kBACPF,MAAO,qFAAuFiB,GAC7F,CACDf,MAAO,yBACPF,MAAO,kJAAoJiB,GAC1J,CACDf,MAAO,4BACPF,MAAO,mFAAqFiB,GAC3F,CACDf,MAAO,oBACPF,MAAO,gDAAkDiB,GACxD,CACDf,MAAO,aACPF,MAAOe,EAAa,iBACnB,CACDb,MAAO,WACPF,MAAOe,GACN,CACDb,MAAO,mBACPF,MAAO,sBACN,CACDE,MAAO,mBACPF,MAAO,mBACPP,KAAM,OACL,CACDS,MAAO,mBACPF,MAAO,UACPP,KAAM,OACL,CACDS,MAAO,SACPF,MAAO,yBACN,CACDE,MAAO,aACPF,MAAO,MACPP,KAAM,QACL,CACDS,MAAO,aACPF,MAAO,MACPP,KAAM,SACL,CACDS,MAAO,SACPF,MAAO,IACPP,KAAM,WACL,CACDS,MAAO,SACPF,MAAO,IACPP,KAAM,YACL,CACDS,MAAO,SACPF,MAAO,IACPP,KAAM,MACL,CACDS,MAAO,SACPF,MAAO,OACPP,KAAM,SACL,CACDS,MAAO,eACPF,MAAO,KACPP,KAAM,WACL,CACDS,MAAO,eACPF,MAAO,kHACPP,KAAM,OACL,CACDS,MAAO,mBACPF,MAAO,+JACN,CACDE,MAAO,SACPF,MAAO,SACN,CACDE,MAAO,SACPF,MAAO,UACPP,KAAM,OACL,CACDS,MAAO,mBACPF,MAAO,QACN,CACDE,MAAO,OACPF,MAAO,SAGXmB,QAAS,CACP,CACEjB,MAAO,eACPF,MAAO,qBACPP,KAAM,SACL,CACDS,MAAO,eACPF,MAAO,UACN,CACDE,MAAO,gBACPF,MAAO,gBACN,CACDE,MAAO,eACPF,MAAO,SAGXoB,IAAK,CACH,CACElB,MAAO,mBACPF,MAAO,WACN,CACDE,MAAO,aACPF,MAAOe,EACPtB,KAAM,SACL,CACDS,MAAO,OACPF,MAAO,GACPP,KAAM,UAGV4B,QAAS,CACP,CACEnB,MAAO,cACPF,MAAO,UACPP,KAAM,SACL,CACDS,MAAO,cACPF,MAAO,OAGXsB,KAAM,CACJ,CACEpB,MAAO,SACPF,MAAO,SACPP,KAAM,OACLyB,GAELK,MAAO,CACL,CACErB,MAAO,SACPF,MAAO,SACPP,KAAM,OACLyB,GAELM,QAAS,CACP,CACEtB,MAAO,SACPF,MAAO,gCACPP,KAAM,OACLyB,GAELO,SAAU,CACR,CACEvB,MAAO,SACPF,MAAO,gCACPP,KAAM,OACLyB,GAELQ,GAAI,CACF,CACExB,MAAO,SACPF,MAAO,gCACPP,KAAM,OACLyB,GAELS,MAAO,CACL,CACEzB,MAAO,SACPF,MAAO,UACPP,KAAM,OACLyB,IAGP,IAAK,IAAIU,KAAOjC,EAAO,CACrB,IAAII,EAAIJ,EAAMiC,GACd,GAAI7B,EAAEH,OACJ,IAAK,IAAIiC,EAAI,EAAGC,EAAM/B,EAAED,OAAQ+B,EAAIC,IAAOD,EAAG,CAC5C,IAAIE,EAAKhC,EAAE8B,GACa,kBAAbE,EAAG/B,QACZL,EAAMiC,GAAKC,GAAG7B,MAAQ,IAAIgB,OAAO,IAAMe,EAAG/B,YAGjB,kBAAb+B,EAAG/B,QACnBL,EAAMiC,GAAK5B,MAAQ,IAAIgB,OAAO,IAAMjB,EAAEC,QAI1Cb,EAAW6C,WAAW,oBAAqB","file":"js/chunk-2d22578a.c5977da9.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/**\n * Link to the project's GitHub page:\n * https://github.com/duralog/CodeMirror\n */\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode('livescript', function(){\n    var tokenBase = function(stream, state) {\n      var next_rule = state.next || \"start\";\n      if (next_rule) {\n        state.next = state.next;\n        var nr = Rules[next_rule];\n        if (nr.splice) {\n          for (var i$ = 0; i$ < nr.length; ++i$) {\n            var r = nr[i$];\n            if (r.regex && stream.match(r.regex)) {\n              state.next = r.next || state.next;\n              return r.token;\n            }\n          }\n          stream.next();\n          return 'error';\n        }\n        if (stream.match(r = Rules[next_rule])) {\n          if (r.regex && stream.match(r.regex)) {\n            state.next = r.next;\n            return r.token;\n          } else {\n            stream.next();\n            return 'error';\n          }\n        }\n      }\n      stream.next();\n      return 'error';\n    };\n    var external = {\n      startState: function(){\n        return {\n          next: 'start',\n          lastToken: {style: null, indent: 0, content: \"\"}\n        };\n      },\n      token: function(stream, state){\n        while (stream.pos == stream.start)\n          var style = tokenBase(stream, state);\n        state.lastToken = {\n          style: style,\n          indent: stream.indentation(),\n          content: stream.current()\n        };\n        return style.replace(/\\./g, ' ');\n      },\n      indent: function(state){\n        var indentation = state.lastToken.indent;\n        if (state.lastToken.content.match(indenter)) {\n          indentation += 2;\n        }\n        return indentation;\n      }\n    };\n    return external;\n  });\n\n  var identifier = '(?![\\\\d\\\\s])[$\\\\w\\\\xAA-\\\\uFFDC](?:(?!\\\\s)[$\\\\w\\\\xAA-\\\\uFFDC]|-[A-Za-z])*';\n  var indenter = RegExp('(?:[({[=:]|[-~]>|\\\\b(?:e(?:lse|xport)|d(?:o|efault)|t(?:ry|hen)|finally|import(?:\\\\s*all)?|const|var|let|new|catch(?:\\\\s*' + identifier + ')?))\\\\s*$');\n  var keywordend = '(?![$\\\\w]|-[A-Za-z]|\\\\s*:(?![:=]))';\n  var stringfill = {\n    token: 'string',\n    regex: '.+'\n  };\n  var Rules = {\n    start: [\n      {\n        token: 'comment.doc',\n        regex: '/\\\\*',\n        next: 'comment'\n      }, {\n        token: 'comment',\n        regex: '#.*'\n      }, {\n        token: 'keyword',\n        regex: '(?:t(?:h(?:is|row|en)|ry|ypeof!?)|c(?:on(?:tinue|st)|a(?:se|tch)|lass)|i(?:n(?:stanceof)?|mp(?:ort(?:\\\\s+all)?|lements)|[fs])|d(?:e(?:fault|lete|bugger)|o)|f(?:or(?:\\\\s+own)?|inally|unction)|s(?:uper|witch)|e(?:lse|x(?:tends|port)|val)|a(?:nd|rguments)|n(?:ew|ot)|un(?:less|til)|w(?:hile|ith)|o[fr]|return|break|let|var|loop)' + keywordend\n      }, {\n        token: 'constant.language',\n        regex: '(?:true|false|yes|no|on|off|null|void|undefined)' + keywordend\n      }, {\n        token: 'invalid.illegal',\n        regex: '(?:p(?:ackage|r(?:ivate|otected)|ublic)|i(?:mplements|nterface)|enum|static|yield)' + keywordend\n      }, {\n        token: 'language.support.class',\n        regex: '(?:R(?:e(?:gExp|ferenceError)|angeError)|S(?:tring|yntaxError)|E(?:rror|valError)|Array|Boolean|Date|Function|Number|Object|TypeError|URIError)' + keywordend\n      }, {\n        token: 'language.support.function',\n        regex: '(?:is(?:NaN|Finite)|parse(?:Int|Float)|Math|JSON|(?:en|de)codeURI(?:Component)?)' + keywordend\n      }, {\n        token: 'variable.language',\n        regex: '(?:t(?:hat|il|o)|f(?:rom|allthrough)|it|by|e)' + keywordend\n      }, {\n        token: 'identifier',\n        regex: identifier + '\\\\s*:(?![:=])'\n      }, {\n        token: 'variable',\n        regex: identifier\n      }, {\n        token: 'keyword.operator',\n        regex: '(?:\\\\.{3}|\\\\s+\\\\?)'\n      }, {\n        token: 'keyword.variable',\n        regex: '(?:@+|::|\\\\.\\\\.)',\n        next: 'key'\n      }, {\n        token: 'keyword.operator',\n        regex: '\\\\.\\\\s*',\n        next: 'key'\n      }, {\n        token: 'string',\n        regex: '\\\\\\\\\\\\S[^\\\\s,;)}\\\\]]*'\n      }, {\n        token: 'string.doc',\n        regex: '\\'\\'\\'',\n        next: 'qdoc'\n      }, {\n        token: 'string.doc',\n        regex: '\"\"\"',\n        next: 'qqdoc'\n      }, {\n        token: 'string',\n        regex: '\\'',\n        next: 'qstring'\n      }, {\n        token: 'string',\n        regex: '\"',\n        next: 'qqstring'\n      }, {\n        token: 'string',\n        regex: '`',\n        next: 'js'\n      }, {\n        token: 'string',\n        regex: '<\\\\[',\n        next: 'words'\n      }, {\n        token: 'string.regex',\n        regex: '//',\n        next: 'heregex'\n      }, {\n        token: 'string.regex',\n        regex: '\\\\/(?:[^[\\\\/\\\\n\\\\\\\\]*(?:(?:\\\\\\\\.|\\\\[[^\\\\]\\\\n\\\\\\\\]*(?:\\\\\\\\.[^\\\\]\\\\n\\\\\\\\]*)*\\\\])[^[\\\\/\\\\n\\\\\\\\]*)*)\\\\/[gimy$]{0,4}',\n        next: 'key'\n      }, {\n        token: 'constant.numeric',\n        regex: '(?:0x[\\\\da-fA-F][\\\\da-fA-F_]*|(?:[2-9]|[12]\\\\d|3[0-6])r[\\\\da-zA-Z][\\\\da-zA-Z_]*|(?:\\\\d[\\\\d_]*(?:\\\\.\\\\d[\\\\d_]*)?|\\\\.\\\\d[\\\\d_]*)(?:e[+-]?\\\\d[\\\\d_]*)?[\\\\w$]*)'\n      }, {\n        token: 'lparen',\n        regex: '[({[]'\n      }, {\n        token: 'rparen',\n        regex: '[)}\\\\]]',\n        next: 'key'\n      }, {\n        token: 'keyword.operator',\n        regex: '\\\\S+'\n      }, {\n        token: 'text',\n        regex: '\\\\s+'\n      }\n    ],\n    heregex: [\n      {\n        token: 'string.regex',\n        regex: '.*?//[gimy$?]{0,4}',\n        next: 'start'\n      }, {\n        token: 'string.regex',\n        regex: '\\\\s*#{'\n      }, {\n        token: 'comment.regex',\n        regex: '\\\\s+(?:#.*)?'\n      }, {\n        token: 'string.regex',\n        regex: '\\\\S+'\n      }\n    ],\n    key: [\n      {\n        token: 'keyword.operator',\n        regex: '[.?@!]+'\n      }, {\n        token: 'identifier',\n        regex: identifier,\n        next: 'start'\n      }, {\n        token: 'text',\n        regex: '',\n        next: 'start'\n      }\n    ],\n    comment: [\n      {\n        token: 'comment.doc',\n        regex: '.*?\\\\*/',\n        next: 'start'\n      }, {\n        token: 'comment.doc',\n        regex: '.+'\n      }\n    ],\n    qdoc: [\n      {\n        token: 'string',\n        regex: \".*?'''\",\n        next: 'key'\n      }, stringfill\n    ],\n    qqdoc: [\n      {\n        token: 'string',\n        regex: '.*?\"\"\"',\n        next: 'key'\n      }, stringfill\n    ],\n    qstring: [\n      {\n        token: 'string',\n        regex: '[^\\\\\\\\\\']*(?:\\\\\\\\.[^\\\\\\\\\\']*)*\\'',\n        next: 'key'\n      }, stringfill\n    ],\n    qqstring: [\n      {\n        token: 'string',\n        regex: '[^\\\\\\\\\"]*(?:\\\\\\\\.[^\\\\\\\\\"]*)*\"',\n        next: 'key'\n      }, stringfill\n    ],\n    js: [\n      {\n        token: 'string',\n        regex: '[^\\\\\\\\`]*(?:\\\\\\\\.[^\\\\\\\\`]*)*`',\n        next: 'key'\n      }, stringfill\n    ],\n    words: [\n      {\n        token: 'string',\n        regex: '.*?\\\\]>',\n        next: 'key'\n      }, stringfill\n    ]\n  };\n  for (var idx in Rules) {\n    var r = Rules[idx];\n    if (r.splice) {\n      for (var i = 0, len = r.length; i < len; ++i) {\n        var rr = r[i];\n        if (typeof rr.regex === 'string') {\n          Rules[idx][i].regex = new RegExp('^' + rr.regex);\n        }\n      }\n    } else if (typeof rr.regex === 'string') {\n      Rules[idx].regex = new RegExp('^' + r.regex);\n    }\n  }\n\n  CodeMirror.defineMIME('text/x-livescript', 'livescript');\n\n});\n"],"sourceRoot":""}