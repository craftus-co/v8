{"version":3,"sources":["webpack:///./node_modules/codemirror/mode/rst/rst.js","webpack:///./node_modules/codemirror/addon/mode/overlay.js","webpack:///./node_modules/codemirror/mode/python/python.js","webpack:///./node_modules/codemirror/mode/stex/stex.js"],"names":["mod","CodeMirror","defineMode","config","options","rx_strong","rx_emphasis","rx_literal","rx_number","rx_positive","rx_negative","rx_uri_protocol","rx_uri_domain","rx_uri_path","rx_uri","RegExp","overlay","token","stream","match","next","mode","getMode","backdrop","overlayMode","format","string","args","Array","prototype","slice","call","arguments","replace","n","mode_python","mode_stex","SEPA","TAIL","rx_TAIL","NAME","rx_NAME","NAME_WWS","REF_NAME","TEXT1","TEXT2","rx_TEXT2","rx_section","rx_explicit","rx_link","rx_directive","rx_substitution","rx_footnote","rx_citation","rx_substitution_ref","rx_footnote_ref","rx_citation_ref","rx_link_ref1","rx_link_ref2","rx_role_pre","rx_role_suf","rx_role","rx_directive_name","rx_directive_tail","rx_substitution_text","rx_substitution_sepa","rx_substitution_name","rx_substitution_tail","rx_link_head","rx_link_name","rx_link_tail","rx_verbatim","rx_examples","to_normal","state","sol","change","to_mode","local","startState","to_explicit","phase","stage","context","current","tmp_stex","undefined","tmp","peek","to_verbatim","tmp_py","eatSpace","eol","skipToEnd","to_comment","as_block","ctx","tok","copyState","innerMode","defineMIME","base","combine","basePos","baseCur","overlayPos","overlayCur","streamSeen","Math","min","start","pos","combineTokens","indent","textAfter","line","electricChars","blankLine","baseToken","overlayToken","wordRegexp","words","join","wordOperators","commonKeywords","commonBuiltins","top","scopes","length","registerHelper","concat","conf","parserConf","ERRORCLASS","delimiters","singleDelimiters","operators","singleOperators","doubleOperators","doubleDelimiters","tripleDelimiters","i","splice","hangingIndent","indentUnit","myKeywords","myBuiltins","extra_keywords","extra_builtins","py3","version","Number","identifiers","stringPrefixes","keywords","builtins","tokenBase","lastToken","indentation","type","scopeOffset","offset","lineOffset","pushPyScope","dedent","errorToken","style","tokenBaseInner","inFormat","floatLiteral","eat","intLiteral","isFmtString","toLowerCase","indexOf","tokenize","formatStringFactory","tokenStringFactory","delimiter","tokenOuter","charAt","substr","singleline","OUTCLASS","tokenNestedExpr","depth","inner","tokenString","eatWhile","singleLineStringErrors","isString","pop","push","align","pushBracketScope","column","indented","tokenLexer","beginningOfLine","test","lambda","delimiter_index","external","basecolumn","addErr","Pass","scope","closing","electricInput","closeBrackets","triples","lineComment","fold","str","split","name","_config","parserConfig","pushCommand","command","cmdState","peekCommand","popCommand","plug","closeBracket","getMostPowerful","styleIdentifier","addPluginPattern","pluginName","cmdStyle","styles","this","bracketNo","argument","openBracket","plugins","setState","f","normal","source","cmdName","hasOwnProperty","beginParams","inMathMode","ch","endModeSeq","lastPlug","s"],"mappings":"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","file":"js/chunk-ce419e16.1afd1b11.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../python/python\"), require(\"../stex/stex\"), require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../python/python\", \"../stex/stex\", \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('rst', function (config, options) {\n\n  var rx_strong = /^\\*\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*\\*/;\n  var rx_emphasis = /^\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*/;\n  var rx_literal = /^``[^`\\s](?:[^`]*[^`\\s])``/;\n\n  var rx_number = /^(?:[\\d]+(?:[\\.,]\\d+)*)/;\n  var rx_positive = /^(?:\\s\\+[\\d]+(?:[\\.,]\\d+)*)/;\n  var rx_negative = /^(?:\\s\\-[\\d]+(?:[\\.,]\\d+)*)/;\n\n  var rx_uri_protocol = \"[Hh][Tt][Tt][Pp][Ss]?://\";\n  var rx_uri_domain = \"(?:[\\\\d\\\\w.-]+)\\\\.(?:\\\\w{2,6})\";\n  var rx_uri_path = \"(?:/[\\\\d\\\\w\\\\#\\\\%\\\\&\\\\-\\\\.\\\\,\\\\/\\\\:\\\\=\\\\?\\\\~]+)*\";\n  var rx_uri = new RegExp(\"^\" + rx_uri_protocol + rx_uri_domain + rx_uri_path);\n\n  var overlay = {\n    token: function (stream) {\n\n      if (stream.match(rx_strong) && stream.match (/\\W+|$/, false))\n        return 'strong';\n      if (stream.match(rx_emphasis) && stream.match (/\\W+|$/, false))\n        return 'em';\n      if (stream.match(rx_literal) && stream.match (/\\W+|$/, false))\n        return 'string-2';\n      if (stream.match(rx_number))\n        return 'number';\n      if (stream.match(rx_positive))\n        return 'positive';\n      if (stream.match(rx_negative))\n        return 'negative';\n      if (stream.match(rx_uri))\n        return 'link';\n\n      while (stream.next() != null) {\n        if (stream.match(rx_strong, false)) break;\n        if (stream.match(rx_emphasis, false)) break;\n        if (stream.match(rx_literal, false)) break;\n        if (stream.match(rx_number, false)) break;\n        if (stream.match(rx_positive, false)) break;\n        if (stream.match(rx_negative, false)) break;\n        if (stream.match(rx_uri, false)) break;\n      }\n\n      return null;\n    }\n  };\n\n  var mode = CodeMirror.getMode(\n    config, options.backdrop || 'rst-base'\n  );\n\n  return CodeMirror.overlayMode(mode, overlay, true); // combine\n}, 'python', 'stex');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\nCodeMirror.defineMode('rst-base', function (config) {\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function format(string) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return string.replace(/{(\\d+)}/g, function (match, n) {\n      return typeof args[n] != 'undefined' ? args[n] : match;\n    });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  var mode_python = CodeMirror.getMode(config, 'python');\n  var mode_stex = CodeMirror.getMode(config, 'stex');\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  var SEPA = \"\\\\s+\";\n  var TAIL = \"(?:\\\\s*|\\\\W|$)\",\n  rx_TAIL = new RegExp(format('^{0}', TAIL));\n\n  var NAME =\n    \"(?:[^\\\\W\\\\d_](?:[\\\\w!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\",\n  rx_NAME = new RegExp(format('^{0}', NAME));\n  var NAME_WWS =\n    \"(?:[^\\\\W\\\\d_](?:[\\\\w\\\\s!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\";\n  var REF_NAME = format('(?:{0}|`{1}`)', NAME, NAME_WWS);\n\n  var TEXT1 = \"(?:[^\\\\s\\\\|](?:[^\\\\|]*[^\\\\s\\\\|])?)\";\n  var TEXT2 = \"(?:[^\\\\`]+)\",\n  rx_TEXT2 = new RegExp(format('^{0}', TEXT2));\n\n  var rx_section = new RegExp(\n    \"^([!'#$%&\\\"()*+,-./:;<=>?@\\\\[\\\\\\\\\\\\]^_`{|}~])\\\\1{3,}\\\\s*$\");\n  var rx_explicit = new RegExp(\n    format('^\\\\.\\\\.{0}', SEPA));\n  var rx_link = new RegExp(\n    format('^_{0}:{1}|^__:{1}', REF_NAME, TAIL));\n  var rx_directive = new RegExp(\n    format('^{0}::{1}', REF_NAME, TAIL));\n  var rx_substitution = new RegExp(\n    format('^\\\\|{0}\\\\|{1}{2}::{3}', TEXT1, SEPA, REF_NAME, TAIL));\n  var rx_footnote = new RegExp(\n    format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]{1}', REF_NAME, TAIL));\n  var rx_citation = new RegExp(\n    format('^\\\\[{0}\\\\]{1}', REF_NAME, TAIL));\n\n  var rx_substitution_ref = new RegExp(\n    format('^\\\\|{0}\\\\|', TEXT1));\n  var rx_footnote_ref = new RegExp(\n    format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]_', REF_NAME));\n  var rx_citation_ref = new RegExp(\n    format('^\\\\[{0}\\\\]_', REF_NAME));\n  var rx_link_ref1 = new RegExp(\n    format('^{0}__?', REF_NAME));\n  var rx_link_ref2 = new RegExp(\n    format('^`{0}`_', TEXT2));\n\n  var rx_role_pre = new RegExp(\n    format('^:{0}:`{1}`{2}', NAME, TEXT2, TAIL));\n  var rx_role_suf = new RegExp(\n    format('^`{1}`:{0}:{2}', NAME, TEXT2, TAIL));\n  var rx_role = new RegExp(\n    format('^:{0}:{1}', NAME, TAIL));\n\n  var rx_directive_name = new RegExp(format('^{0}', REF_NAME));\n  var rx_directive_tail = new RegExp(format('^::{0}', TAIL));\n  var rx_substitution_text = new RegExp(format('^\\\\|{0}\\\\|', TEXT1));\n  var rx_substitution_sepa = new RegExp(format('^{0}', SEPA));\n  var rx_substitution_name = new RegExp(format('^{0}', REF_NAME));\n  var rx_substitution_tail = new RegExp(format('^::{0}', TAIL));\n  var rx_link_head = new RegExp(\"^_\");\n  var rx_link_name = new RegExp(format('^{0}|_', REF_NAME));\n  var rx_link_tail = new RegExp(format('^:{0}', TAIL));\n\n  var rx_verbatim = new RegExp('^::\\\\s*$');\n  var rx_examples = new RegExp('^\\\\s+(?:>>>|In \\\\[\\\\d+\\\\]:)\\\\s');\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_normal(stream, state) {\n    var token = null;\n\n    if (stream.sol() && stream.match(rx_examples, false)) {\n      change(state, to_mode, {\n        mode: mode_python, local: CodeMirror.startState(mode_python)\n      });\n    } else if (stream.sol() && stream.match(rx_explicit)) {\n      change(state, to_explicit);\n      token = 'meta';\n    } else if (stream.sol() && stream.match(rx_section)) {\n      change(state, to_normal);\n      token = 'header';\n    } else if (phase(state) == rx_role_pre ||\n               stream.match(rx_role_pre, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role_pre, 1));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role_pre, 2));\n        stream.match(rx_NAME);\n        token = 'keyword';\n\n        if (stream.current().match(/^(?:math|latex)/)) {\n          state.tmp_stex = true;\n        }\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role_pre, 3));\n        stream.match(/^:`/);\n        token = 'meta';\n        break;\n      case 3:\n        if (state.tmp_stex) {\n          state.tmp_stex = undefined; state.tmp = {\n            mode: mode_stex, local: CodeMirror.startState(mode_stex)\n          };\n        }\n\n        if (state.tmp) {\n          if (stream.peek() == '`') {\n            change(state, to_normal, context(rx_role_pre, 4));\n            state.tmp = undefined;\n            break;\n          }\n\n          token = state.tmp.mode.token(stream, state.tmp.local);\n          break;\n        }\n\n        change(state, to_normal, context(rx_role_pre, 4));\n        stream.match(rx_TEXT2);\n        token = 'string';\n        break;\n      case 4:\n        change(state, to_normal, context(rx_role_pre, 5));\n        stream.match(/^`/);\n        token = 'meta';\n        break;\n      case 5:\n        change(state, to_normal, context(rx_role_pre, 6));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_role_suf ||\n               stream.match(rx_role_suf, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role_suf, 1));\n        stream.match(/^`/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role_suf, 2));\n        stream.match(rx_TEXT2);\n        token = 'string';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role_suf, 3));\n        stream.match(/^`:/);\n        token = 'meta';\n        break;\n      case 3:\n        change(state, to_normal, context(rx_role_suf, 4));\n        stream.match(rx_NAME);\n        token = 'keyword';\n        break;\n      case 4:\n        change(state, to_normal, context(rx_role_suf, 5));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 5:\n        change(state, to_normal, context(rx_role_suf, 6));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_role || stream.match(rx_role, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role, 1));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role, 2));\n        stream.match(rx_NAME);\n        token = 'keyword';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role, 3));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 3:\n        change(state, to_normal, context(rx_role, 4));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_substitution_ref ||\n               stream.match(rx_substitution_ref, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_substitution_ref, 1));\n        stream.match(rx_substitution_text);\n        token = 'variable-2';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_substitution_ref, 2));\n        if (stream.match(/^_?_?/)) token = 'link';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_footnote_ref)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_citation_ref)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_link_ref1)) {\n      change(state, to_normal);\n      if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n        token = 'link';\n      }\n    } else if (phase(state) == rx_link_ref2 ||\n               stream.match(rx_link_ref2, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n          change(state, to_normal, context(rx_link_ref2, 1));\n        } else {\n          stream.match(rx_link_ref2);\n        }\n        break;\n      case 1:\n        change(state, to_normal, context(rx_link_ref2, 2));\n        stream.match(/^`/);\n        token = 'link';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_link_ref2, 3));\n        stream.match(rx_TEXT2);\n        break;\n      case 3:\n        change(state, to_normal, context(rx_link_ref2, 4));\n        stream.match(/^`_/);\n        token = 'link';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_verbatim)) {\n      change(state, to_verbatim);\n    }\n\n    else {\n      if (stream.next()) change(state, to_normal);\n    }\n\n    return token;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_explicit(stream, state) {\n    var token = null;\n\n    if (phase(state) == rx_substitution ||\n        stream.match(rx_substitution, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_substitution, 1));\n        stream.match(rx_substitution_text);\n        token = 'variable-2';\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_substitution, 2));\n        stream.match(rx_substitution_sepa);\n        break;\n      case 2:\n        change(state, to_explicit, context(rx_substitution, 3));\n        stream.match(rx_substitution_name);\n        token = 'keyword';\n        break;\n      case 3:\n        change(state, to_explicit, context(rx_substitution, 4));\n        stream.match(rx_substitution_tail);\n        token = 'meta';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_directive ||\n               stream.match(rx_directive, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_directive, 1));\n        stream.match(rx_directive_name);\n        token = 'keyword';\n\n        if (stream.current().match(/^(?:math|latex)/))\n          state.tmp_stex = true;\n        else if (stream.current().match(/^python/))\n          state.tmp_py = true;\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_directive, 2));\n        stream.match(rx_directive_tail);\n        token = 'meta';\n\n        if (stream.match(/^latex\\s*$/) || state.tmp_stex) {\n          state.tmp_stex = undefined; change(state, to_mode, {\n            mode: mode_stex, local: CodeMirror.startState(mode_stex)\n          });\n        }\n        break;\n      case 2:\n        change(state, to_explicit, context(rx_directive, 3));\n        if (stream.match(/^python\\s*$/) || state.tmp_py) {\n          state.tmp_py = undefined; change(state, to_mode, {\n            mode: mode_python, local: CodeMirror.startState(mode_python)\n          });\n        }\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_link || stream.match(rx_link, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_link, 1));\n        stream.match(rx_link_head);\n        stream.match(rx_link_name);\n        token = 'link';\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_link, 2));\n        stream.match(rx_link_tail);\n        token = 'meta';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_footnote)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_citation)) {\n      change(state, to_normal);\n      token = 'quote';\n    }\n\n    else {\n      stream.eatSpace();\n      if (stream.eol()) {\n        change(state, to_normal);\n      } else {\n        stream.skipToEnd();\n        change(state, to_comment);\n        token = 'comment';\n      }\n    }\n\n    return token;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_comment(stream, state) {\n    return as_block(stream, state, 'comment');\n  }\n\n  function to_verbatim(stream, state) {\n    return as_block(stream, state, 'meta');\n  }\n\n  function as_block(stream, state, token) {\n    if (stream.eol() || stream.eatSpace()) {\n      stream.skipToEnd();\n      return token;\n    } else {\n      change(state, to_normal);\n      return null;\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_mode(stream, state) {\n\n    if (state.ctx.mode && state.ctx.local) {\n\n      if (stream.sol()) {\n        if (!stream.eatSpace()) change(state, to_normal);\n        return null;\n      }\n\n      return state.ctx.mode.token(stream, state.ctx.local);\n    }\n\n    change(state, to_normal);\n    return null;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function context(phase, stage, mode, local) {\n    return {phase: phase, stage: stage, mode: mode, local: local};\n  }\n\n  function change(state, tok, ctx) {\n    state.tok = tok;\n    state.ctx = ctx || {};\n  }\n\n  function stage(state) {\n    return state.ctx.stage || 0;\n  }\n\n  function phase(state) {\n    return state.ctx.phase;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  return {\n    startState: function () {\n      return {tok: to_normal, ctx: context(undefined, 0)};\n    },\n\n    copyState: function (state) {\n      var ctx = state.ctx, tmp = state.tmp;\n      if (ctx.local)\n        ctx = {mode: ctx.mode, local: CodeMirror.copyState(ctx.mode, ctx.local)};\n      if (tmp)\n        tmp = {mode: tmp.mode, local: CodeMirror.copyState(tmp.mode, tmp.local)};\n      return {tok: state.tok, ctx: ctx, tmp: tmp};\n    },\n\n    innerMode: function (state) {\n      return state.tmp      ? {state: state.tmp.local, mode: state.tmp.mode}\n      : state.ctx.mode ? {state: state.ctx.local, mode: state.ctx.mode}\n      : null;\n    },\n\n    token: function (stream, state) {\n      return state.tok(stream, state);\n    }\n  };\n}, 'python', 'stex');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\nCodeMirror.defineMIME('text/x-rst', 'rst');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.overlayMode = function(base, overlay, combine) {\n  return {\n    startState: function() {\n      return {\n        base: CodeMirror.startState(base),\n        overlay: CodeMirror.startState(overlay),\n        basePos: 0, baseCur: null,\n        overlayPos: 0, overlayCur: null,\n        streamSeen: null\n      };\n    },\n    copyState: function(state) {\n      return {\n        base: CodeMirror.copyState(base, state.base),\n        overlay: CodeMirror.copyState(overlay, state.overlay),\n        basePos: state.basePos, baseCur: null,\n        overlayPos: state.overlayPos, overlayCur: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream != state.streamSeen ||\n          Math.min(state.basePos, state.overlayPos) < stream.start) {\n        state.streamSeen = stream;\n        state.basePos = state.overlayPos = stream.start;\n      }\n\n      if (stream.start == state.basePos) {\n        state.baseCur = base.token(stream, state.base);\n        state.basePos = stream.pos;\n      }\n      if (stream.start == state.overlayPos) {\n        stream.pos = stream.start;\n        state.overlayCur = overlay.token(stream, state.overlay);\n        state.overlayPos = stream.pos;\n      }\n      stream.pos = Math.min(state.basePos, state.overlayPos);\n\n      // state.overlay.combineTokens always takes precedence over combine,\n      // unless set to null\n      if (state.overlayCur == null) return state.baseCur;\n      else if (state.baseCur != null &&\n               state.overlay.combineTokens ||\n               combine && state.overlay.combineTokens == null)\n        return state.baseCur + \" \" + state.overlayCur;\n      else return state.overlayCur;\n    },\n\n    indent: base.indent && function(state, textAfter, line) {\n      return base.indent(state.base, textAfter, line);\n    },\n    electricChars: base.electricChars,\n\n    innerMode: function(state) { return {state: state.base, mode: base}; },\n\n    blankLine: function(state) {\n      var baseToken, overlayToken;\n      if (base.blankLine) baseToken = base.blankLine(state.base);\n      if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n\n      return overlayToken == null ?\n        baseToken :\n        (combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken);\n    }\n  };\n};\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  var wordOperators = wordRegexp([\"and\", \"or\", \"not\", \"is\"]);\n  var commonKeywords = [\"as\", \"assert\", \"break\", \"class\", \"continue\",\n                        \"def\", \"del\", \"elif\", \"else\", \"except\", \"finally\",\n                        \"for\", \"from\", \"global\", \"if\", \"import\",\n                        \"lambda\", \"pass\", \"raise\", \"return\",\n                        \"try\", \"while\", \"with\", \"yield\", \"in\"];\n  var commonBuiltins = [\"abs\", \"all\", \"any\", \"bin\", \"bool\", \"bytearray\", \"callable\", \"chr\",\n                        \"classmethod\", \"compile\", \"complex\", \"delattr\", \"dict\", \"dir\", \"divmod\",\n                        \"enumerate\", \"eval\", \"filter\", \"float\", \"format\", \"frozenset\",\n                        \"getattr\", \"globals\", \"hasattr\", \"hash\", \"help\", \"hex\", \"id\",\n                        \"input\", \"int\", \"isinstance\", \"issubclass\", \"iter\", \"len\",\n                        \"list\", \"locals\", \"map\", \"max\", \"memoryview\", \"min\", \"next\",\n                        \"object\", \"oct\", \"open\", \"ord\", \"pow\", \"property\", \"range\",\n                        \"repr\", \"reversed\", \"round\", \"set\", \"setattr\", \"slice\",\n                        \"sorted\", \"staticmethod\", \"str\", \"sum\", \"super\", \"tuple\",\n                        \"type\", \"vars\", \"zip\", \"__import__\", \"NotImplemented\",\n                        \"Ellipsis\", \"__debug__\"];\n  CodeMirror.registerHelper(\"hintWords\", \"python\", commonKeywords.concat(commonBuiltins));\n\n  function top(state) {\n    return state.scopes[state.scopes.length - 1];\n  }\n\n  CodeMirror.defineMode(\"python\", function(conf, parserConf) {\n    var ERRORCLASS = \"error\";\n\n    var delimiters = parserConf.delimiters || parserConf.singleDelimiters || /^[\\(\\)\\[\\]\\{\\}@,:`=;\\.\\\\]/;\n    //               (Backwards-compatibility with old, cumbersome config system)\n    var operators = [parserConf.singleOperators, parserConf.doubleOperators, parserConf.doubleDelimiters, parserConf.tripleDelimiters,\n                     parserConf.operators || /^([-+*/%\\/&|^]=?|[<>=]+|\\/\\/=?|\\*\\*=?|!=|[~!@]|\\.\\.\\.)/]\n    for (var i = 0; i < operators.length; i++) if (!operators[i]) operators.splice(i--, 1)\n\n    var hangingIndent = parserConf.hangingIndent || conf.indentUnit;\n\n    var myKeywords = commonKeywords, myBuiltins = commonBuiltins;\n    if (parserConf.extra_keywords != undefined)\n      myKeywords = myKeywords.concat(parserConf.extra_keywords);\n\n    if (parserConf.extra_builtins != undefined)\n      myBuiltins = myBuiltins.concat(parserConf.extra_builtins);\n\n    var py3 = !(parserConf.version && Number(parserConf.version) < 3)\n    if (py3) {\n      // since http://legacy.python.org/dev/peps/pep-0465/ @ is also an operator\n      var identifiers = parserConf.identifiers|| /^[_A-Za-z\\u00A1-\\uFFFF][_A-Za-z0-9\\u00A1-\\uFFFF]*/;\n      myKeywords = myKeywords.concat([\"nonlocal\", \"False\", \"True\", \"None\", \"async\", \"await\"]);\n      myBuiltins = myBuiltins.concat([\"ascii\", \"bytes\", \"exec\", \"print\"]);\n      var stringPrefixes = new RegExp(\"^(([rbuf]|(br)|(fr))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n    } else {\n      var identifiers = parserConf.identifiers|| /^[_A-Za-z][_A-Za-z0-9]*/;\n      myKeywords = myKeywords.concat([\"exec\", \"print\"]);\n      myBuiltins = myBuiltins.concat([\"apply\", \"basestring\", \"buffer\", \"cmp\", \"coerce\", \"execfile\",\n                                      \"file\", \"intern\", \"long\", \"raw_input\", \"reduce\", \"reload\",\n                                      \"unichr\", \"unicode\", \"xrange\", \"False\", \"True\", \"None\"]);\n      var stringPrefixes = new RegExp(\"^(([rubf]|(ur)|(br))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n    }\n    var keywords = wordRegexp(myKeywords);\n    var builtins = wordRegexp(myBuiltins);\n\n    // tokenizers\n    function tokenBase(stream, state) {\n      var sol = stream.sol() && state.lastToken != \"\\\\\"\n      if (sol) state.indent = stream.indentation()\n      // Handle scope changes\n      if (sol && top(state).type == \"py\") {\n        var scopeOffset = top(state).offset;\n        if (stream.eatSpace()) {\n          var lineOffset = stream.indentation();\n          if (lineOffset > scopeOffset)\n            pushPyScope(state);\n          else if (lineOffset < scopeOffset && dedent(stream, state) && stream.peek() != \"#\")\n            state.errorToken = true;\n          return null;\n        } else {\n          var style = tokenBaseInner(stream, state);\n          if (scopeOffset > 0 && dedent(stream, state))\n            style += \" \" + ERRORCLASS;\n          return style;\n        }\n      }\n      return tokenBaseInner(stream, state);\n    }\n\n    function tokenBaseInner(stream, state, inFormat) {\n      if (stream.eatSpace()) return null;\n\n      // Handle Comments\n      if (!inFormat && stream.match(/^#.*/)) return \"comment\";\n\n      // Handle Number Literals\n      if (stream.match(/^[0-9\\.]/, false)) {\n        var floatLiteral = false;\n        // Floats\n        if (stream.match(/^[\\d_]*\\.\\d+(e[\\+\\-]?\\d+)?/i)) { floatLiteral = true; }\n        if (stream.match(/^[\\d_]+\\.\\d*/)) { floatLiteral = true; }\n        if (stream.match(/^\\.\\d+/)) { floatLiteral = true; }\n        if (floatLiteral) {\n          // Float literals may be \"imaginary\"\n          stream.eat(/J/i);\n          return \"number\";\n        }\n        // Integers\n        var intLiteral = false;\n        // Hex\n        if (stream.match(/^0x[0-9a-f_]+/i)) intLiteral = true;\n        // Binary\n        if (stream.match(/^0b[01_]+/i)) intLiteral = true;\n        // Octal\n        if (stream.match(/^0o[0-7_]+/i)) intLiteral = true;\n        // Decimal\n        if (stream.match(/^[1-9][\\d_]*(e[\\+\\-]?[\\d_]+)?/)) {\n          // Decimal literals may be \"imaginary\"\n          stream.eat(/J/i);\n          // TODO - Can you have imaginary longs?\n          intLiteral = true;\n        }\n        // Zero by itself with no other piece of number.\n        if (stream.match(/^0(?![\\dx])/i)) intLiteral = true;\n        if (intLiteral) {\n          // Integer literals may be \"long\"\n          stream.eat(/L/i);\n          return \"number\";\n        }\n      }\n\n      // Handle Strings\n      if (stream.match(stringPrefixes)) {\n        var isFmtString = stream.current().toLowerCase().indexOf('f') !== -1;\n        if (!isFmtString) {\n          state.tokenize = tokenStringFactory(stream.current(), state.tokenize);\n          return state.tokenize(stream, state);\n        } else {\n          state.tokenize = formatStringFactory(stream.current(), state.tokenize);\n          return state.tokenize(stream, state);\n        }\n      }\n\n      for (var i = 0; i < operators.length; i++)\n        if (stream.match(operators[i])) return \"operator\"\n\n      if (stream.match(delimiters)) return \"punctuation\";\n\n      if (state.lastToken == \".\" && stream.match(identifiers))\n        return \"property\";\n\n      if (stream.match(keywords) || stream.match(wordOperators))\n        return \"keyword\";\n\n      if (stream.match(builtins))\n        return \"builtin\";\n\n      if (stream.match(/^(self|cls)\\b/))\n        return \"variable-2\";\n\n      if (stream.match(identifiers)) {\n        if (state.lastToken == \"def\" || state.lastToken == \"class\")\n          return \"def\";\n        return \"variable\";\n      }\n\n      // Handle non-detected items\n      stream.next();\n      return inFormat ? null :ERRORCLASS;\n    }\n\n    function formatStringFactory(delimiter, tokenOuter) {\n      while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0)\n        delimiter = delimiter.substr(1);\n\n      var singleline = delimiter.length == 1;\n      var OUTCLASS = \"string\";\n\n      function tokenNestedExpr(depth) {\n        return function(stream, state) {\n          var inner = tokenBaseInner(stream, state, true)\n          if (inner == \"punctuation\") {\n            if (stream.current() == \"{\") {\n              state.tokenize = tokenNestedExpr(depth + 1)\n            } else if (stream.current() == \"}\") {\n              if (depth > 1) state.tokenize = tokenNestedExpr(depth - 1)\n              else state.tokenize = tokenString\n            }\n          }\n          return inner\n        }\n      }\n\n      function tokenString(stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\{\\}\\\\]/);\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n            if (singleline && stream.eol())\n              return OUTCLASS;\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenOuter;\n            return OUTCLASS;\n          } else if (stream.match('{{')) {\n            // ignore {{ in f-str\n            return OUTCLASS;\n          } else if (stream.match('{', false)) {\n            // switch to nested mode\n            state.tokenize = tokenNestedExpr(0)\n            if (stream.current()) return OUTCLASS;\n            else return state.tokenize(stream, state)\n          } else if (stream.match('}}')) {\n            return OUTCLASS;\n          } else if (stream.match('}')) {\n            // single } in f-string is an error\n            return ERRORCLASS;\n          } else {\n            stream.eat(/['\"]/);\n          }\n        }\n        if (singleline) {\n          if (parserConf.singleLineStringErrors)\n            return ERRORCLASS;\n          else\n            state.tokenize = tokenOuter;\n        }\n        return OUTCLASS;\n      }\n      tokenString.isString = true;\n      return tokenString;\n    }\n\n    function tokenStringFactory(delimiter, tokenOuter) {\n      while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0)\n        delimiter = delimiter.substr(1);\n\n      var singleline = delimiter.length == 1;\n      var OUTCLASS = \"string\";\n\n      function tokenString(stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\\\]/);\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n            if (singleline && stream.eol())\n              return OUTCLASS;\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenOuter;\n            return OUTCLASS;\n          } else {\n            stream.eat(/['\"]/);\n          }\n        }\n        if (singleline) {\n          if (parserConf.singleLineStringErrors)\n            return ERRORCLASS;\n          else\n            state.tokenize = tokenOuter;\n        }\n        return OUTCLASS;\n      }\n      tokenString.isString = true;\n      return tokenString;\n    }\n\n    function pushPyScope(state) {\n      while (top(state).type != \"py\") state.scopes.pop()\n      state.scopes.push({offset: top(state).offset + conf.indentUnit,\n                         type: \"py\",\n                         align: null})\n    }\n\n    function pushBracketScope(stream, state, type) {\n      var align = stream.match(/^([\\s\\[\\{\\(]|#.*)*$/, false) ? null : stream.column() + 1\n      state.scopes.push({offset: state.indent + hangingIndent,\n                         type: type,\n                         align: align})\n    }\n\n    function dedent(stream, state) {\n      var indented = stream.indentation();\n      while (state.scopes.length > 1 && top(state).offset > indented) {\n        if (top(state).type != \"py\") return true;\n        state.scopes.pop();\n      }\n      return top(state).offset != indented;\n    }\n\n    function tokenLexer(stream, state) {\n      if (stream.sol()) state.beginningOfLine = true;\n\n      var style = state.tokenize(stream, state);\n      var current = stream.current();\n\n      // Handle decorators\n      if (state.beginningOfLine && current == \"@\")\n        return stream.match(identifiers, false) ? \"meta\" : py3 ? \"operator\" : ERRORCLASS;\n\n      if (/\\S/.test(current)) state.beginningOfLine = false;\n\n      if ((style == \"variable\" || style == \"builtin\")\n          && state.lastToken == \"meta\")\n        style = \"meta\";\n\n      // Handle scope changes.\n      if (current == \"pass\" || current == \"return\")\n        state.dedent += 1;\n\n      if (current == \"lambda\") state.lambda = true;\n      if (current == \":\" && !state.lambda && top(state).type == \"py\")\n        pushPyScope(state);\n\n      if (current.length == 1 && !/string|comment/.test(style)) {\n        var delimiter_index = \"[({\".indexOf(current);\n        if (delimiter_index != -1)\n          pushBracketScope(stream, state, \"])}\".slice(delimiter_index, delimiter_index+1));\n\n        delimiter_index = \"])}\".indexOf(current);\n        if (delimiter_index != -1) {\n          if (top(state).type == current) state.indent = state.scopes.pop().offset - hangingIndent\n          else return ERRORCLASS;\n        }\n      }\n      if (state.dedent > 0 && stream.eol() && top(state).type == \"py\") {\n        if (state.scopes.length > 1) state.scopes.pop();\n        state.dedent -= 1;\n      }\n\n      return style;\n    }\n\n    var external = {\n      startState: function(basecolumn) {\n        return {\n          tokenize: tokenBase,\n          scopes: [{offset: basecolumn || 0, type: \"py\", align: null}],\n          indent: basecolumn || 0,\n          lastToken: null,\n          lambda: false,\n          dedent: 0\n        };\n      },\n\n      token: function(stream, state) {\n        var addErr = state.errorToken;\n        if (addErr) state.errorToken = false;\n        var style = tokenLexer(stream, state);\n\n        if (style && style != \"comment\")\n          state.lastToken = (style == \"keyword\" || style == \"punctuation\") ? stream.current() : style;\n        if (style == \"punctuation\") style = null;\n\n        if (stream.eol() && state.lambda)\n          state.lambda = false;\n        return addErr ? style + \" \" + ERRORCLASS : style;\n      },\n\n      indent: function(state, textAfter) {\n        if (state.tokenize != tokenBase)\n          return state.tokenize.isString ? CodeMirror.Pass : 0;\n\n        var scope = top(state), closing = scope.type == textAfter.charAt(0)\n        if (scope.align != null)\n          return scope.align - (closing ? 1 : 0)\n        else\n          return scope.offset - (closing ? hangingIndent : 0)\n      },\n\n      electricInput: /^\\s*[\\}\\]\\)]$/,\n      closeBrackets: {triples: \"'\\\"\"},\n      lineComment: \"#\",\n      fold: \"indent\"\n    };\n    return external;\n  });\n\n  CodeMirror.defineMIME(\"text/x-python\", \"python\");\n\n  var words = function(str) { return str.split(\" \"); };\n\n  CodeMirror.defineMIME(\"text/x-cython\", {\n    name: \"python\",\n    extra_keywords: words(\"by cdef cimport cpdef ctypedef enum except \"+\n                          \"extern gil include nogil property public \"+\n                          \"readonly struct union DEF IF ELIF ELSE\")\n  });\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/*\n * Author: Constantin Jucovschi (c.jucovschi@jacobs-university.de)\n * Licence: MIT\n */\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"stex\", function(_config, parserConfig) {\n    \"use strict\";\n\n    function pushCommand(state, command) {\n      state.cmdState.push(command);\n    }\n\n    function peekCommand(state) {\n      if (state.cmdState.length > 0) {\n        return state.cmdState[state.cmdState.length - 1];\n      } else {\n        return null;\n      }\n    }\n\n    function popCommand(state) {\n      var plug = state.cmdState.pop();\n      if (plug) {\n        plug.closeBracket();\n      }\n    }\n\n    // returns the non-default plugin closest to the end of the list\n    function getMostPowerful(state) {\n      var context = state.cmdState;\n      for (var i = context.length - 1; i >= 0; i--) {\n        var plug = context[i];\n        if (plug.name == \"DEFAULT\") {\n          continue;\n        }\n        return plug;\n      }\n      return { styleIdentifier: function() { return null; } };\n    }\n\n    function addPluginPattern(pluginName, cmdStyle, styles) {\n      return function () {\n        this.name = pluginName;\n        this.bracketNo = 0;\n        this.style = cmdStyle;\n        this.styles = styles;\n        this.argument = null;   // \\begin and \\end have arguments that follow. These are stored in the plugin\n\n        this.styleIdentifier = function() {\n          return this.styles[this.bracketNo - 1] || null;\n        };\n        this.openBracket = function() {\n          this.bracketNo++;\n          return \"bracket\";\n        };\n        this.closeBracket = function() {};\n      };\n    }\n\n    var plugins = {};\n\n    plugins[\"importmodule\"] = addPluginPattern(\"importmodule\", \"tag\", [\"string\", \"builtin\"]);\n    plugins[\"documentclass\"] = addPluginPattern(\"documentclass\", \"tag\", [\"\", \"atom\"]);\n    plugins[\"usepackage\"] = addPluginPattern(\"usepackage\", \"tag\", [\"atom\"]);\n    plugins[\"begin\"] = addPluginPattern(\"begin\", \"tag\", [\"atom\"]);\n    plugins[\"end\"] = addPluginPattern(\"end\", \"tag\", [\"atom\"]);\n\n    plugins[\"label\"    ] = addPluginPattern(\"label\"    , \"tag\", [\"atom\"]);\n    plugins[\"ref\"      ] = addPluginPattern(\"ref\"      , \"tag\", [\"atom\"]);\n    plugins[\"eqref\"    ] = addPluginPattern(\"eqref\"    , \"tag\", [\"atom\"]);\n    plugins[\"cite\"     ] = addPluginPattern(\"cite\"     , \"tag\", [\"atom\"]);\n    plugins[\"bibitem\"  ] = addPluginPattern(\"bibitem\"  , \"tag\", [\"atom\"]);\n    plugins[\"Bibitem\"  ] = addPluginPattern(\"Bibitem\"  , \"tag\", [\"atom\"]);\n    plugins[\"RBibitem\" ] = addPluginPattern(\"RBibitem\" , \"tag\", [\"atom\"]);\n\n    plugins[\"DEFAULT\"] = function () {\n      this.name = \"DEFAULT\";\n      this.style = \"tag\";\n\n      this.styleIdentifier = this.openBracket = this.closeBracket = function() {};\n    };\n\n    function setState(state, f) {\n      state.f = f;\n    }\n\n    // called when in a normal (no environment) context\n    function normal(source, state) {\n      var plug;\n      // Do we look like '\\command' ?  If so, attempt to apply the plugin 'command'\n      if (source.match(/^\\\\[a-zA-Z@]+/)) {\n        var cmdName = source.current().slice(1);\n        plug = plugins.hasOwnProperty(cmdName) ? plugins[cmdName] : plugins[\"DEFAULT\"];\n        plug = new plug();\n        pushCommand(state, plug);\n        setState(state, beginParams);\n        return plug.style;\n      }\n\n      // escape characters\n      if (source.match(/^\\\\[$&%#{}_]/)) {\n        return \"tag\";\n      }\n\n      // white space control characters\n      if (source.match(/^\\\\[,;!\\/\\\\]/)) {\n        return \"tag\";\n      }\n\n      // find if we're starting various math modes\n      if (source.match(\"\\\\[\")) {\n        setState(state, function(source, state){ return inMathMode(source, state, \"\\\\]\"); });\n        return \"keyword\";\n      }\n      if (source.match(\"\\\\(\")) {\n        setState(state, function(source, state){ return inMathMode(source, state, \"\\\\)\"); });\n        return \"keyword\";\n      }\n      if (source.match(\"$$\")) {\n        setState(state, function(source, state){ return inMathMode(source, state, \"$$\"); });\n        return \"keyword\";\n      }\n      if (source.match(\"$\")) {\n        setState(state, function(source, state){ return inMathMode(source, state, \"$\"); });\n        return \"keyword\";\n      }\n\n      var ch = source.next();\n      if (ch == \"%\") {\n        source.skipToEnd();\n        return \"comment\";\n      } else if (ch == '}' || ch == ']') {\n        plug = peekCommand(state);\n        if (plug) {\n          plug.closeBracket(ch);\n          setState(state, beginParams);\n        } else {\n          return \"error\";\n        }\n        return \"bracket\";\n      } else if (ch == '{' || ch == '[') {\n        plug = plugins[\"DEFAULT\"];\n        plug = new plug();\n        pushCommand(state, plug);\n        return \"bracket\";\n      } else if (/\\d/.test(ch)) {\n        source.eatWhile(/[\\w.%]/);\n        return \"atom\";\n      } else {\n        source.eatWhile(/[\\w\\-_]/);\n        plug = getMostPowerful(state);\n        if (plug.name == 'begin') {\n          plug.argument = source.current();\n        }\n        return plug.styleIdentifier();\n      }\n    }\n\n    function inMathMode(source, state, endModeSeq) {\n      if (source.eatSpace()) {\n        return null;\n      }\n      if (endModeSeq && source.match(endModeSeq)) {\n        setState(state, normal);\n        return \"keyword\";\n      }\n      if (source.match(/^\\\\[a-zA-Z@]+/)) {\n        return \"tag\";\n      }\n      if (source.match(/^[a-zA-Z]+/)) {\n        return \"variable-2\";\n      }\n      // escape characters\n      if (source.match(/^\\\\[$&%#{}_]/)) {\n        return \"tag\";\n      }\n      // white space control characters\n      if (source.match(/^\\\\[,;!\\/]/)) {\n        return \"tag\";\n      }\n      // special math-mode characters\n      if (source.match(/^[\\^_&]/)) {\n        return \"tag\";\n      }\n      // non-special characters\n      if (source.match(/^[+\\-<>|=,\\/@!*:;'\"`~#?]/)) {\n        return null;\n      }\n      if (source.match(/^(\\d+\\.\\d*|\\d*\\.\\d+|\\d+)/)) {\n        return \"number\";\n      }\n      var ch = source.next();\n      if (ch == \"{\" || ch == \"}\" || ch == \"[\" || ch == \"]\" || ch == \"(\" || ch == \")\") {\n        return \"bracket\";\n      }\n\n      if (ch == \"%\") {\n        source.skipToEnd();\n        return \"comment\";\n      }\n      return \"error\";\n    }\n\n    function beginParams(source, state) {\n      var ch = source.peek(), lastPlug;\n      if (ch == '{' || ch == '[') {\n        lastPlug = peekCommand(state);\n        lastPlug.openBracket(ch);\n        source.eat(ch);\n        setState(state, normal);\n        return \"bracket\";\n      }\n      if (/[ \\t\\r]/.test(ch)) {\n        source.eat(ch);\n        return null;\n      }\n      setState(state, normal);\n      popCommand(state);\n\n      return normal(source, state);\n    }\n\n    return {\n      startState: function() {\n        var f = parserConfig.inMathMode ? function(source, state){ return inMathMode(source, state); } : normal;\n        return {\n          cmdState: [],\n          f: f\n        };\n      },\n      copyState: function(s) {\n        return {\n          cmdState: s.cmdState.slice(),\n          f: s.f\n        };\n      },\n      token: function(stream, state) {\n        return state.f(stream, state);\n      },\n      blankLine: function(state) {\n        state.f = normal;\n        state.cmdState.length = 0;\n      },\n      lineComment: \"%\"\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-stex\", \"stex\");\n  CodeMirror.defineMIME(\"text/x-latex\", \"stex\");\n\n});\n"],"sourceRoot":""}