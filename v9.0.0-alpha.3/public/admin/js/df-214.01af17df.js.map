{"version":3,"sources":["webpack:///./node_modules/date-fns/locale/ka/_lib/formatDistance/index.js"],"names":["Object","defineProperty","exports","value","default","formatDistance","formatDistanceLocale","lessThanXSeconds","past","present","future","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","token","count","options","result","addSuffix","comparison","replace","module"],"mappings":"0GAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,QAAUC,EAClB,IAAIC,EAAuB,CACzBC,iBAAkB,CAChBC,KAAM,mCACNC,QAAS,0BACTC,OAAQ,4BAEVC,SAAU,CACRH,KAAM,sBACNC,QAAS,iBACTC,OAAQ,mBAEVE,YAAa,CACXJ,KAAM,qBACNC,QAAS,gBACTC,OAAQ,kBAEVG,iBAAkB,CAChBL,KAAM,mCACNC,QAAS,0BACTC,OAAQ,4BAEVI,SAAU,CACRN,KAAM,sBACNC,QAAS,iBACTC,OAAQ,mBAEVK,YAAa,CACXP,KAAM,kCACNC,QAAS,6BACTC,OAAQ,+BAEVM,OAAQ,CACNR,KAAM,uBACNC,QAAS,kBACTC,OAAQ,oBAEVO,MAAO,CACLT,KAAM,qBACNC,QAAS,gBACTC,OAAQ,mBAEVQ,YAAa,CACXV,KAAM,kCACNC,QAAS,6BACTC,OAAQ,gCAEVS,OAAQ,CACNX,KAAM,yBACNC,QAAS,kBACTC,OAAQ,qBAEVU,aAAc,CACZZ,KAAM,gCACNC,QAAS,2BACTC,OAAQ,8BAEVW,QAAS,CACPb,KAAM,qBACNC,QAAS,gBACTC,OAAQ,mBAEVY,YAAa,CACXd,KAAM,gCACNC,QAAS,4BACTC,OAAQ,8BAEVa,OAAQ,CACNf,KAAM,qBACNC,QAAS,iBACTC,OAAQ,mBAEVc,WAAY,CACVhB,KAAM,gCACNC,QAAS,uBACTC,OAAQ,oCAEVe,aAAc,CACZjB,KAAM,6BACNC,QAAS,yBACTC,OAAQ,4BAIZ,SAASL,EAAeqB,EAAOC,EAAOC,GAEpC,IAAIC,EAYJ,OAbAD,EAAUA,GAAW,GAInBC,EADyC,kBAAhCvB,EAAqBoB,GACrBpB,EAAqBoB,GACrBE,EAAQE,WAAaF,EAAQG,WAAa,EAC1CzB,EAAqBoB,GAAOhB,OAAOsB,QAAQ,YAAaL,GACxDC,EAAQE,WAAaF,EAAQG,YAAc,EAC3CzB,EAAqBoB,GAAOlB,KAAKwB,QAAQ,YAAaL,GAEtDrB,EAAqBoB,GAAOjB,QAAQuB,QAAQ,YAAaL,GAG7DE,EAGTI,EAAO/B,QAAUA,EAAQE","file":"js/df-214.01af17df.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = formatDistance;\nvar formatDistanceLocale = {\n  lessThanXSeconds: {\n    past: '{{count}} წამზე ნაკლები ხნის წინ',\n    present: '{{count}} წამზე ნაკლები',\n    future: '{{count}} წამზე ნაკლებში'\n  },\n  xSeconds: {\n    past: '{{count}} წამის წინ',\n    present: '{{count}} წამი',\n    future: '{{count}} წამში'\n  },\n  halfAMinute: {\n    past: 'ნახევარი წუთის წინ',\n    present: 'ნახევარი წუთი',\n    future: 'ნახევარი წუთში'\n  },\n  lessThanXMinutes: {\n    past: '{{count}} წუთზე ნაკლები ხნის წინ',\n    present: '{{count}} წუთზე ნაკლები',\n    future: '{{count}} წუთზე ნაკლებში'\n  },\n  xMinutes: {\n    past: '{{count}} წუთის წინ',\n    present: '{{count}} წუთი',\n    future: '{{count}} წუთში'\n  },\n  aboutXHours: {\n    past: 'დაახლოებით {{count}} საათის წინ',\n    present: 'დაახლოებით {{count}} საათი',\n    future: 'დაახლოებით {{count}} საათში'\n  },\n  xHours: {\n    past: '{{count}} საათის წინ',\n    present: '{{count}} საათი',\n    future: '{{count}} საათში'\n  },\n  xDays: {\n    past: '{{count}} დღის წინ',\n    present: '{{count}} დღე',\n    future: '{{count}} დღეში'\n  },\n  aboutXWeeks: {\n    past: 'დაახლოებით {{count}} კვირას წინ',\n    present: 'დაახლოებით {{count}} კვირა',\n    future: 'დაახლოებით {{count}} კვირაში'\n  },\n  xWeeks: {\n    past: '{{count}} კვირას კვირა',\n    present: '{{count}} კვირა',\n    future: '{{count}} კვირაში'\n  },\n  aboutXMonths: {\n    past: 'დაახლოებით {{count}} თვის წინ',\n    present: 'დაახლოებით {{count}} თვე',\n    future: 'დაახლოებით {{count}} თვეში'\n  },\n  xMonths: {\n    past: '{{count}} თვის წინ',\n    present: '{{count}} თვე',\n    future: '{{count}} თვეში'\n  },\n  aboutXYears: {\n    past: 'დაახლოებით {{count}} წლის წინ',\n    present: 'დაახლოებით {{count}} წელი',\n    future: 'დაახლოებით {{count}} წელში'\n  },\n  xYears: {\n    past: '{{count}} წლის წინ',\n    present: '{{count}} წელი',\n    future: '{{count}} წელში'\n  },\n  overXYears: {\n    past: '{{count}} წელზე მეტი ხნის წინ',\n    present: '{{count}} წელზე მეტი',\n    future: '{{count}} წელზე მეტი ხნის შემდეგ'\n  },\n  almostXYears: {\n    past: 'თითქმის {{count}} წლის წინ',\n    present: 'თითქმის {{count}} წელი',\n    future: 'თითქმის {{count}} წელში'\n  }\n};\n\nfunction formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (options.addSuffix && options.comparison > 0) {\n    result = formatDistanceLocale[token].future.replace('{{count}}', count);\n  } else if (options.addSuffix && options.comparison <= 0) {\n    result = formatDistanceLocale[token].past.replace('{{count}}', count);\n  } else {\n    result = formatDistanceLocale[token].present.replace('{{count}}', count);\n  }\n\n  return result;\n}\n\nmodule.exports = exports.default;"],"sourceRoot":""}