{"version":3,"sources":["webpack:///./node_modules/codemirror/addon/display/autorefresh.js"],"names":["mod","CodeMirror","startListening","cm","state","check","display","wrapper","offsetHeight","stopListening","lastWrapHeight","clientHeight","refresh","timeout","setTimeout","delay","hurry","clearTimeout","on","window","_cm","off","defineOption","val","autoRefresh"],"mappings":"oGAGA,SAAUA,GAENA,EAAI,EAAQ,UAFhB,EAOG,SAASC,GACV,aAWA,SAASC,EAAeC,EAAIC,GAC1B,SAASC,IACHF,EAAGG,QAAQC,QAAQC,cACrBC,EAAcN,EAAIC,GACdD,EAAGG,QAAQI,gBAAkBP,EAAGG,QAAQC,QAAQI,cAClDR,EAAGS,WAELR,EAAMS,QAAUC,WAAWT,EAAOD,EAAMW,OAG5CX,EAAMS,QAAUC,WAAWT,EAAOD,EAAMW,OACxCX,EAAMY,MAAQ,WACZC,aAAab,EAAMS,SACnBT,EAAMS,QAAUC,WAAWT,EAAO,KAEpCJ,EAAWiB,GAAGC,OAAQ,UAAWf,EAAMY,OACvCf,EAAWiB,GAAGC,OAAQ,QAASf,EAAMY,OAGvC,SAASP,EAAcW,EAAKhB,GAC1Ba,aAAab,EAAMS,SACnBZ,EAAWoB,IAAIF,OAAQ,UAAWf,EAAMY,OACxCf,EAAWoB,IAAIF,OAAQ,QAASf,EAAMY,OA/BxCf,EAAWqB,aAAa,eAAe,GAAO,SAASnB,EAAIoB,GACrDpB,EAAGC,MAAMoB,cACXf,EAAcN,EAAIA,EAAGC,MAAMoB,aAC3BrB,EAAGC,MAAMoB,YAAc,MAErBD,GAA0C,GAAnCpB,EAAGG,QAAQC,QAAQC,cAC5BN,EAAeC,EAAIA,EAAGC,MAAMoB,YAAc,CAACT,MAAOQ,EAAIR,OAAS","file":"js/chunk-2d22ce43.c5c8c9bd.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"))\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod)\n  else // Plain browser env\n    mod(CodeMirror)\n})(function(CodeMirror) {\n  \"use strict\"\n\n  CodeMirror.defineOption(\"autoRefresh\", false, function(cm, val) {\n    if (cm.state.autoRefresh) {\n      stopListening(cm, cm.state.autoRefresh)\n      cm.state.autoRefresh = null\n    }\n    if (val && cm.display.wrapper.offsetHeight == 0)\n      startListening(cm, cm.state.autoRefresh = {delay: val.delay || 250})\n  })\n\n  function startListening(cm, state) {\n    function check() {\n      if (cm.display.wrapper.offsetHeight) {\n        stopListening(cm, state)\n        if (cm.display.lastWrapHeight != cm.display.wrapper.clientHeight)\n          cm.refresh()\n      } else {\n        state.timeout = setTimeout(check, state.delay)\n      }\n    }\n    state.timeout = setTimeout(check, state.delay)\n    state.hurry = function() {\n      clearTimeout(state.timeout)\n      state.timeout = setTimeout(check, 50)\n    }\n    CodeMirror.on(window, \"mouseup\", state.hurry)\n    CodeMirror.on(window, \"keyup\", state.hurry)\n  }\n\n  function stopListening(_cm, state) {\n    clearTimeout(state.timeout)\n    CodeMirror.off(window, \"mouseup\", state.hurry)\n    CodeMirror.off(window, \"keyup\", state.hurry)\n  }\n});\n"],"sourceRoot":""}