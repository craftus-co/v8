{"version":3,"sources":["webpack:///./node_modules/codemirror/addon/hint/javascript-hint.js"],"names":["mod","CodeMirror","Pos","forEach","arr","f","i","e","length","arrayContains","item","Array","prototype","indexOf","scriptHint","editor","keywords","getToken","options","cur","getCursor","token","test","type","innerMode","getMode","state","mode","helperType","string","end","ch","slice","start","tprop","line","context","push","list","getCompletions","from","to","javascriptHint","javascriptKeywords","getTokenAt","getCoffeeScriptToken","charAt","replace","coffeescriptHint","coffeescriptKeywords","registerHelper","stringProps","split","arrayProps","funcProps","forAllProps","obj","callback","Object","getOwnPropertyNames","getPrototypeOf","o","name","found","global","globalScope","window","maybeAdd","str","lastIndexOf","gatherCompletions","Function","base","pop","additionalContext","useGlobalScope","jQuery","_","v","localVars","next","c","prev","vars","globalVars","key"],"mappings":"sGAGA,SAAUA,GAENA,EAAI,EAAQ,UAFhB,EAOG,SAASC,GACV,IAAIC,EAAMD,EAAWC,IAErB,SAASC,EAAQC,EAAKC,GACpB,IAAK,IAAIC,EAAI,EAAGC,EAAIH,EAAII,OAAQF,EAAIC,IAAKD,EAAGD,EAAED,EAAIE,IAGpD,SAASG,EAAcL,EAAKM,GAC1B,IAAKC,MAAMC,UAAUC,QAAS,CAC5B,IAAIP,EAAIF,EAAII,OACZ,MAAOF,IACL,GAAIF,EAAIE,KAAOI,EACb,OAAO,EAGX,OAAO,EAET,OAA6B,GAAtBN,EAAIS,QAAQH,GAGrB,SAASI,EAAWC,EAAQC,EAAUC,EAAUC,GAE9C,IAAIC,EAAMJ,EAAOK,YAAaC,EAAQJ,EAASF,EAAQI,GACvD,IAAI,yBAAyBG,KAAKD,EAAME,MAAxC,CACA,IAAIC,EAAYvB,EAAWuB,UAAUT,EAAOU,UAAWJ,EAAMK,OAC7D,GAAkC,SAA9BF,EAAUG,KAAKC,WAAnB,CACAP,EAAMK,MAAQF,EAAUE,MAGnB,YAAYJ,KAAKD,EAAMQ,QAGjBR,EAAMS,IAAMX,EAAIY,KACzBV,EAAMS,IAAMX,EAAIY,GAChBV,EAAMQ,OAASR,EAAMQ,OAAOG,MAAM,EAAGb,EAAIY,GAAKV,EAAMY,QAJpDZ,EAAQ,CAACY,MAAOd,EAAIY,GAAID,IAAKX,EAAIY,GAAIF,OAAQ,GAAIH,MAAOL,EAAMK,MACrDH,KAAsB,KAAhBF,EAAMQ,OAAgB,WAAa,MAMpD,IAAIK,EAAQb,EAEZ,MAAqB,YAAda,EAAMX,KAAoB,CAE/B,GADAW,EAAQjB,EAASF,EAAQb,EAAIiB,EAAIgB,KAAMD,EAAMD,QACzB,KAAhBC,EAAML,OAAe,OAEzB,GADAK,EAAQjB,EAASF,EAAQb,EAAIiB,EAAIgB,KAAMD,EAAMD,SACxCG,EAAS,IAAIA,EAAU,GAC5BA,EAAQC,KAAKH,GAEf,MAAO,CAACI,KAAMC,EAAelB,EAAOe,EAASpB,EAAUE,GAC/CsB,KAAMtC,EAAIiB,EAAIgB,KAAMd,EAAMY,OAC1BQ,GAAIvC,EAAIiB,EAAIgB,KAAMd,EAAMS,QAGlC,SAASY,EAAe3B,EAAQG,GAC9B,OAAOJ,EAAWC,EAAQ4B,GACR,SAAUpC,EAAGY,GAAM,OAAOZ,EAAEqC,WAAWzB,KACvCD,GAIpB,SAAS2B,EAAqB9B,EAAQI,GAIpC,IAAIE,EAAQN,EAAO6B,WAAWzB,GAW9B,OAVIA,EAAIY,IAAMV,EAAMY,MAAQ,GAA+B,KAA1BZ,EAAMQ,OAAOiB,OAAO,IACnDzB,EAAMS,IAAMT,EAAMY,MAClBZ,EAAMQ,OAAS,IACfR,EAAME,KAAO,YAEN,cAAcD,KAAKD,EAAMQ,UAChCR,EAAME,KAAO,WACbF,EAAMY,QACNZ,EAAMQ,OAASR,EAAMQ,OAAOkB,QAAQ,KAAM,KAErC1B,EAGT,SAAS2B,EAAiBjC,EAAQG,GAChC,OAAOJ,EAAWC,EAAQkC,EAAsBJ,EAAsB3B,GArBxEjB,EAAWiD,eAAe,OAAQ,aAAcR,GAuBhDzC,EAAWiD,eAAe,OAAQ,eAAgBF,GAElD,IAAIG,EAAc,iJAC8DC,MAAM,KAClFC,EAAa,4IACkED,MAAM,KACrFE,EAAY,4BAA4BF,MAAM,KAC9CT,EAAqB,4NACoGS,MAAM,KAC/HH,EAAuB,gMAC8GG,MAAM,KAE/I,SAASG,EAAYC,EAAKC,GACxB,GAAKC,OAAOC,qBAAwBD,OAAOE,eAGzC,IAAK,IAAIC,EAAIL,EAAKK,EAAGA,EAAIH,OAAOE,eAAeC,GAC7CH,OAAOC,oBAAoBE,GAAG1D,QAAQsD,QAHxC,IAAK,IAAIK,KAAQN,EAAKC,EAASK,GAOnC,SAASvB,EAAelB,EAAOe,EAASpB,EAAUE,GAChD,IAAI6C,EAAQ,GAAI9B,EAAQZ,EAAMQ,OAAQmC,EAAS9C,GAAWA,EAAQ+C,aAAeC,OACjF,SAASC,EAASC,GACiB,GAA7BA,EAAIC,YAAYpC,EAAO,IAAYxB,EAAcsD,EAAOK,IAAML,EAAM1B,KAAK+B,GAE/E,SAASE,EAAkBd,GACP,iBAAPA,EAAiBrD,EAAQgD,EAAagB,GACxCX,aAAe7C,MAAOR,EAAQkD,EAAYc,GAC1CX,aAAee,UAAUpE,EAAQmD,EAAWa,GACrDZ,EAAYC,EAAKW,GAGnB,GAAI/B,GAAWA,EAAQ5B,OAAQ,CAG7B,IAAyBgE,EAArBhB,EAAMpB,EAAQqC,MACdjB,EAAIjC,MAAyC,IAAjCiC,EAAIjC,KAAKV,QAAQ,aAC3BK,GAAWA,EAAQwD,oBACrBF,EAAOtD,EAAQwD,kBAAkBlB,EAAI3B,SAClCX,IAAsC,IAA3BA,EAAQyD,iBACtBH,EAAOA,GAAQR,EAAOR,EAAI3B,UACP,UAAZ2B,EAAIjC,KACbiD,EAAO,GACc,QAAZhB,EAAIjC,KACbiD,EAAO,EACc,YAAZhB,EAAIjC,OACQ,MAAjByC,EAAOY,QAAiC,KAAdpB,EAAI3B,QAA+B,UAAd2B,EAAI3B,QAC1B,mBAAjBmC,EAAOY,OAEE,MAAZZ,EAAOa,GAA4B,KAAdrB,EAAI3B,QAAsC,mBAAZmC,EAAOa,IACjEL,EAAOR,EAAOa,KAFdL,EAAOR,EAAOY,UAIlB,MAAe,MAARJ,GAAgBpC,EAAQ5B,OAC7BgE,EAAOA,EAAKpC,EAAQqC,MAAM5C,QAChB,MAAR2C,GAAcF,EAAkBE,OAC/B,CAGL,IAAK,IAAIM,EAAIzD,EAAMK,MAAMqD,UAAWD,EAAGA,EAAIA,EAAEE,KAAMb,EAASW,EAAEhB,MAC9D,IAAK,IAAImB,EAAI5D,EAAMK,MAAMU,QAAS6C,EAAGA,EAAIA,EAAEC,KACzC,IAASJ,EAAIG,EAAEE,KAAML,EAAGA,EAAIA,EAAEE,KAAMb,EAASW,EAAEhB,MACjD,IAASgB,EAAIzD,EAAMK,MAAM0D,WAAYN,EAAGA,EAAIA,EAAEE,KAAMb,EAASW,EAAEhB,MAC/D,GAAI5C,GAAwC,MAA7BA,EAAQwD,kBACrB,IAAK,IAAIW,KAAOnE,EAAQwD,kBACtBP,EAASkB,GACRnE,IAAsC,IAA3BA,EAAQyD,gBACtBL,EAAkBN,GACpB7D,EAAQa,EAAUmD,GAEpB,OAAOJ","file":"js/chunk-2d0c4aa5.4748f5e3.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  var Pos = CodeMirror.Pos;\n\n  function forEach(arr, f) {\n    for (var i = 0, e = arr.length; i < e; ++i) f(arr[i]);\n  }\n\n  function arrayContains(arr, item) {\n    if (!Array.prototype.indexOf) {\n      var i = arr.length;\n      while (i--) {\n        if (arr[i] === item) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return arr.indexOf(item) != -1;\n  }\n\n  function scriptHint(editor, keywords, getToken, options) {\n    // Find the token at the cursor\n    var cur = editor.getCursor(), token = getToken(editor, cur);\n    if (/\\b(?:string|comment)\\b/.test(token.type)) return;\n    var innerMode = CodeMirror.innerMode(editor.getMode(), token.state);\n    if (innerMode.mode.helperType === \"json\") return;\n    token.state = innerMode.state;\n\n    // If it's not a 'word-style' token, ignore the token.\n    if (!/^[\\w$_]*$/.test(token.string)) {\n      token = {start: cur.ch, end: cur.ch, string: \"\", state: token.state,\n               type: token.string == \".\" ? \"property\" : null};\n    } else if (token.end > cur.ch) {\n      token.end = cur.ch;\n      token.string = token.string.slice(0, cur.ch - token.start);\n    }\n\n    var tprop = token;\n    // If it is a property, find out what it is a property of.\n    while (tprop.type == \"property\") {\n      tprop = getToken(editor, Pos(cur.line, tprop.start));\n      if (tprop.string != \".\") return;\n      tprop = getToken(editor, Pos(cur.line, tprop.start));\n      if (!context) var context = [];\n      context.push(tprop);\n    }\n    return {list: getCompletions(token, context, keywords, options),\n            from: Pos(cur.line, token.start),\n            to: Pos(cur.line, token.end)};\n  }\n\n  function javascriptHint(editor, options) {\n    return scriptHint(editor, javascriptKeywords,\n                      function (e, cur) {return e.getTokenAt(cur);},\n                      options);\n  };\n  CodeMirror.registerHelper(\"hint\", \"javascript\", javascriptHint);\n\n  function getCoffeeScriptToken(editor, cur) {\n  // This getToken, it is for coffeescript, imitates the behavior of\n  // getTokenAt method in javascript.js, that is, returning \"property\"\n  // type and treat \".\" as indepenent token.\n    var token = editor.getTokenAt(cur);\n    if (cur.ch == token.start + 1 && token.string.charAt(0) == '.') {\n      token.end = token.start;\n      token.string = '.';\n      token.type = \"property\";\n    }\n    else if (/^\\.[\\w$_]*$/.test(token.string)) {\n      token.type = \"property\";\n      token.start++;\n      token.string = token.string.replace(/\\./, '');\n    }\n    return token;\n  }\n\n  function coffeescriptHint(editor, options) {\n    return scriptHint(editor, coffeescriptKeywords, getCoffeeScriptToken, options);\n  }\n  CodeMirror.registerHelper(\"hint\", \"coffeescript\", coffeescriptHint);\n\n  var stringProps = (\"charAt charCodeAt indexOf lastIndexOf substring substr slice trim trimLeft trimRight \" +\n                     \"toUpperCase toLowerCase split concat match replace search\").split(\" \");\n  var arrayProps = (\"length concat join splice push pop shift unshift slice reverse sort indexOf \" +\n                    \"lastIndexOf every some filter forEach map reduce reduceRight \").split(\" \");\n  var funcProps = \"prototype apply call bind\".split(\" \");\n  var javascriptKeywords = (\"break case catch class const continue debugger default delete do else export extends false finally for function \" +\n                  \"if in import instanceof new null return super switch this throw true try typeof var void while with yield\").split(\" \");\n  var coffeescriptKeywords = (\"and break catch class continue delete do else extends false finally for \" +\n                  \"if in instanceof isnt new no not null of off on or return switch then throw true try typeof until void while with yes\").split(\" \");\n\n  function forAllProps(obj, callback) {\n    if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {\n      for (var name in obj) callback(name)\n    } else {\n      for (var o = obj; o; o = Object.getPrototypeOf(o))\n        Object.getOwnPropertyNames(o).forEach(callback)\n    }\n  }\n\n  function getCompletions(token, context, keywords, options) {\n    var found = [], start = token.string, global = options && options.globalScope || window;\n    function maybeAdd(str) {\n      if (str.lastIndexOf(start, 0) == 0 && !arrayContains(found, str)) found.push(str);\n    }\n    function gatherCompletions(obj) {\n      if (typeof obj == \"string\") forEach(stringProps, maybeAdd);\n      else if (obj instanceof Array) forEach(arrayProps, maybeAdd);\n      else if (obj instanceof Function) forEach(funcProps, maybeAdd);\n      forAllProps(obj, maybeAdd)\n    }\n\n    if (context && context.length) {\n      // If this is a property, see if it belongs to some object we can\n      // find in the current environment.\n      var obj = context.pop(), base;\n      if (obj.type && obj.type.indexOf(\"variable\") === 0) {\n        if (options && options.additionalContext)\n          base = options.additionalContext[obj.string];\n        if (!options || options.useGlobalScope !== false)\n          base = base || global[obj.string];\n      } else if (obj.type == \"string\") {\n        base = \"\";\n      } else if (obj.type == \"atom\") {\n        base = 1;\n      } else if (obj.type == \"function\") {\n        if (global.jQuery != null && (obj.string == '$' || obj.string == 'jQuery') &&\n            (typeof global.jQuery == 'function'))\n          base = global.jQuery();\n        else if (global._ != null && (obj.string == '_') && (typeof global._ == 'function'))\n          base = global._();\n      }\n      while (base != null && context.length)\n        base = base[context.pop().string];\n      if (base != null) gatherCompletions(base);\n    } else {\n      // If not, just look in the global object, any local scope, and optional additional-context\n      // (reading into JS mode internals to get at the local and global variables)\n      for (var v = token.state.localVars; v; v = v.next) maybeAdd(v.name);\n      for (var c = token.state.context; c; c = c.prev)\n        for (var v = c.vars; v; v = v.next) maybeAdd(v.name)\n      for (var v = token.state.globalVars; v; v = v.next) maybeAdd(v.name);\n      if (options && options.additionalContext != null)\n        for (var key in options.additionalContext)\n          maybeAdd(key);\n      if (!options || options.useGlobalScope !== false)\n        gatherCompletions(global);\n      forEach(keywords, maybeAdd);\n    }\n    return found;\n  }\n});\n"],"sourceRoot":""}